// ==============================================================
// Generated by Vitis HLS v2023.1.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="kernel_mvt_kernel_mvt,hls_ip_2023_1_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.960760,HLS_SYN_LAT=1647,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=8548,HLS_SYN_LUT=7791,HLS_VERSION=2023_1_1}" *)

module kernel_mvt (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        x1_address0,
        x1_ce0,
        x1_we0,
        x1_d0,
        x1_q0,
        x2_address0,
        x2_ce0,
        x2_we0,
        x2_d0,
        x2_q0,
        y_1_address0,
        y_1_ce0,
        y_1_q0,
        y_1_address1,
        y_1_ce1,
        y_1_q1,
        y_2_address0,
        y_2_ce0,
        y_2_q0,
        y_2_address1,
        y_2_ce1,
        y_2_q1,
        A_address0,
        A_ce0,
        A_q0,
        A_address1,
        A_ce1,
        A_q1
);

parameter    ap_ST_fsm_state1 = 24'd1;
parameter    ap_ST_fsm_state2 = 24'd2;
parameter    ap_ST_fsm_state3 = 24'd4;
parameter    ap_ST_fsm_state4 = 24'd8;
parameter    ap_ST_fsm_state5 = 24'd16;
parameter    ap_ST_fsm_state6 = 24'd32;
parameter    ap_ST_fsm_state7 = 24'd64;
parameter    ap_ST_fsm_state8 = 24'd128;
parameter    ap_ST_fsm_state9 = 24'd256;
parameter    ap_ST_fsm_state10 = 24'd512;
parameter    ap_ST_fsm_state11 = 24'd1024;
parameter    ap_ST_fsm_state12 = 24'd2048;
parameter    ap_ST_fsm_state13 = 24'd4096;
parameter    ap_ST_fsm_state14 = 24'd8192;
parameter    ap_ST_fsm_state15 = 24'd16384;
parameter    ap_ST_fsm_state16 = 24'd32768;
parameter    ap_ST_fsm_state17 = 24'd65536;
parameter    ap_ST_fsm_state18 = 24'd131072;
parameter    ap_ST_fsm_state19 = 24'd262144;
parameter    ap_ST_fsm_state20 = 24'd524288;
parameter    ap_ST_fsm_state21 = 24'd1048576;
parameter    ap_ST_fsm_state22 = 24'd2097152;
parameter    ap_ST_fsm_state23 = 24'd4194304;
parameter    ap_ST_fsm_state24 = 24'd8388608;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [5:0] x1_address0;
output   x1_ce0;
output   x1_we0;
output  [31:0] x1_d0;
input  [31:0] x1_q0;
output  [5:0] x2_address0;
output   x2_ce0;
output   x2_we0;
output  [31:0] x2_d0;
input  [31:0] x2_q0;
output  [5:0] y_1_address0;
output   y_1_ce0;
input  [31:0] y_1_q0;
output  [5:0] y_1_address1;
output   y_1_ce1;
input  [31:0] y_1_q1;
output  [5:0] y_2_address0;
output   y_2_ce0;
input  [31:0] y_2_q0;
output  [5:0] y_2_address1;
output   y_2_ce1;
input  [31:0] y_2_q1;
output  [10:0] A_address0;
output   A_ce0;
input  [31:0] A_q0;
output  [10:0] A_address1;
output   A_ce1;
input  [31:0] A_q1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[5:0] y_1_address0;
reg y_1_ce0;
reg[5:0] y_1_address1;
reg y_1_ce1;
reg[5:0] y_2_address0;
reg y_2_ce0;
reg[5:0] y_2_address1;
reg y_2_ce1;
reg[10:0] A_address0;
reg A_ce0;
reg[10:0] A_address1;
reg A_ce1;

(* fsm_encoding = "none" *) reg   [23:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [31:0] y_1_load_reg_958;
wire    ap_CS_fsm_state2;
reg   [31:0] y_1_load_1_reg_963;
reg   [31:0] y_1_load_2_reg_978;
wire    ap_CS_fsm_state3;
reg   [31:0] y_1_load_3_reg_983;
reg   [31:0] y_1_load_4_reg_1008;
wire    ap_CS_fsm_state4;
reg   [31:0] y_1_load_5_reg_1013;
reg   [31:0] y_2_load_reg_1028;
reg   [31:0] y_2_load_1_reg_1033;
reg   [31:0] y_1_load_6_reg_1048;
wire    ap_CS_fsm_state5;
reg   [31:0] y_1_load_7_reg_1053;
reg   [31:0] y_2_load_2_reg_1068;
reg   [31:0] y_2_load_3_reg_1073;
reg   [31:0] y_1_load_8_reg_1088;
wire    ap_CS_fsm_state6;
reg   [31:0] y_1_load_9_reg_1093;
reg   [31:0] y_2_load_4_reg_1108;
reg   [31:0] y_2_load_5_reg_1113;
reg   [31:0] y_1_load_10_reg_1128;
wire    ap_CS_fsm_state7;
reg   [31:0] y_1_load_11_reg_1133;
reg   [31:0] y_2_load_6_reg_1148;
reg   [31:0] y_2_load_7_reg_1153;
reg   [31:0] y_1_load_12_reg_1168;
wire    ap_CS_fsm_state8;
reg   [31:0] y_1_load_13_reg_1173;
reg   [31:0] y_2_load_8_reg_1188;
reg   [31:0] y_2_load_9_reg_1193;
reg   [31:0] y_1_load_14_reg_1208;
wire    ap_CS_fsm_state9;
reg   [31:0] y_1_load_15_reg_1213;
reg   [31:0] y_2_load_10_reg_1228;
reg   [31:0] y_2_load_11_reg_1233;
reg   [31:0] y_1_load_16_reg_1248;
wire    ap_CS_fsm_state10;
reg   [31:0] y_1_load_17_reg_1253;
reg   [31:0] y_2_load_12_reg_1268;
reg   [31:0] y_2_load_13_reg_1273;
reg   [31:0] y_1_load_18_reg_1288;
wire    ap_CS_fsm_state11;
reg   [31:0] y_1_load_19_reg_1293;
reg   [31:0] y_2_load_14_reg_1308;
reg   [31:0] y_2_load_15_reg_1313;
reg   [31:0] y_1_load_20_reg_1328;
wire    ap_CS_fsm_state12;
reg   [31:0] y_1_load_21_reg_1333;
reg   [31:0] y_2_load_16_reg_1348;
reg   [31:0] y_2_load_17_reg_1353;
reg   [31:0] y_1_load_22_reg_1368;
wire    ap_CS_fsm_state13;
reg   [31:0] y_1_load_23_reg_1373;
reg   [31:0] y_2_load_18_reg_1388;
reg   [31:0] y_2_load_19_reg_1393;
reg   [31:0] y_1_load_24_reg_1408;
wire    ap_CS_fsm_state14;
reg   [31:0] y_1_load_25_reg_1413;
reg   [31:0] y_2_load_20_reg_1428;
reg   [31:0] y_2_load_21_reg_1433;
reg   [31:0] y_1_load_26_reg_1448;
wire    ap_CS_fsm_state15;
reg   [31:0] y_1_load_27_reg_1453;
reg   [31:0] y_2_load_22_reg_1468;
reg   [31:0] y_2_load_23_reg_1473;
reg   [31:0] y_1_load_28_reg_1488;
wire    ap_CS_fsm_state16;
reg   [31:0] y_1_load_29_reg_1493;
reg   [31:0] y_2_load_24_reg_1508;
reg   [31:0] y_2_load_25_reg_1513;
reg   [31:0] y_1_load_30_reg_1528;
wire    ap_CS_fsm_state17;
reg   [31:0] y_1_load_31_reg_1533;
reg   [31:0] y_2_load_26_reg_1548;
reg   [31:0] y_2_load_27_reg_1553;
reg   [31:0] y_1_load_32_reg_1568;
wire    ap_CS_fsm_state18;
reg   [31:0] y_1_load_33_reg_1573;
reg   [31:0] y_2_load_28_reg_1588;
reg   [31:0] y_2_load_29_reg_1593;
reg   [31:0] y_1_load_34_reg_1608;
wire    ap_CS_fsm_state19;
reg   [31:0] y_1_load_35_reg_1613;
reg   [31:0] y_2_load_30_reg_1628;
reg   [31:0] y_2_load_31_reg_1633;
reg   [31:0] y_1_load_36_reg_1648;
wire    ap_CS_fsm_state20;
reg   [31:0] y_1_load_37_reg_1653;
reg   [31:0] y_2_load_32_reg_1668;
reg   [31:0] y_2_load_33_reg_1673;
reg   [31:0] y_1_load_38_reg_1688;
wire    ap_CS_fsm_state21;
reg   [31:0] y_1_load_39_reg_1693;
reg   [31:0] y_2_load_34_reg_1698;
reg   [31:0] y_2_load_35_reg_1703;
reg   [31:0] y_2_load_36_reg_1718;
wire    ap_CS_fsm_state22;
reg   [31:0] y_2_load_37_reg_1723;
reg   [31:0] y_2_load_38_reg_1738;
wire    ap_CS_fsm_state23;
reg   [31:0] y_2_load_39_reg_1743;
wire    grp_kernel_mvt_Pipeline_VITIS_LOOP_21_1_fu_848_ap_start;
wire    grp_kernel_mvt_Pipeline_VITIS_LOOP_21_1_fu_848_ap_done;
wire    grp_kernel_mvt_Pipeline_VITIS_LOOP_21_1_fu_848_ap_idle;
wire    grp_kernel_mvt_Pipeline_VITIS_LOOP_21_1_fu_848_ap_ready;
wire   [10:0] grp_kernel_mvt_Pipeline_VITIS_LOOP_21_1_fu_848_A_address0;
wire    grp_kernel_mvt_Pipeline_VITIS_LOOP_21_1_fu_848_A_ce0;
wire   [10:0] grp_kernel_mvt_Pipeline_VITIS_LOOP_21_1_fu_848_A_address1;
wire    grp_kernel_mvt_Pipeline_VITIS_LOOP_21_1_fu_848_A_ce1;
wire   [5:0] grp_kernel_mvt_Pipeline_VITIS_LOOP_21_1_fu_848_x1_address0;
wire    grp_kernel_mvt_Pipeline_VITIS_LOOP_21_1_fu_848_x1_ce0;
wire    grp_kernel_mvt_Pipeline_VITIS_LOOP_21_1_fu_848_x1_we0;
wire   [31:0] grp_kernel_mvt_Pipeline_VITIS_LOOP_21_1_fu_848_x1_d0;
wire  signed [31:0] grp_kernel_mvt_Pipeline_VITIS_LOOP_21_1_fu_848_grp_fu_1748_p_din0;
wire  signed [31:0] grp_kernel_mvt_Pipeline_VITIS_LOOP_21_1_fu_848_grp_fu_1748_p_din1;
wire    grp_kernel_mvt_Pipeline_VITIS_LOOP_21_1_fu_848_grp_fu_1748_p_ce;
wire  signed [31:0] grp_kernel_mvt_Pipeline_VITIS_LOOP_21_1_fu_848_grp_fu_1752_p_din0;
wire  signed [31:0] grp_kernel_mvt_Pipeline_VITIS_LOOP_21_1_fu_848_grp_fu_1752_p_din1;
wire    grp_kernel_mvt_Pipeline_VITIS_LOOP_21_1_fu_848_grp_fu_1752_p_ce;
wire    grp_kernel_mvt_Pipeline_VITIS_LOOP_24_3_fu_898_ap_start;
wire    grp_kernel_mvt_Pipeline_VITIS_LOOP_24_3_fu_898_ap_done;
wire    grp_kernel_mvt_Pipeline_VITIS_LOOP_24_3_fu_898_ap_idle;
wire    grp_kernel_mvt_Pipeline_VITIS_LOOP_24_3_fu_898_ap_ready;
wire   [10:0] grp_kernel_mvt_Pipeline_VITIS_LOOP_24_3_fu_898_A_address0;
wire    grp_kernel_mvt_Pipeline_VITIS_LOOP_24_3_fu_898_A_ce0;
wire   [10:0] grp_kernel_mvt_Pipeline_VITIS_LOOP_24_3_fu_898_A_address1;
wire    grp_kernel_mvt_Pipeline_VITIS_LOOP_24_3_fu_898_A_ce1;
wire   [5:0] grp_kernel_mvt_Pipeline_VITIS_LOOP_24_3_fu_898_x2_address0;
wire    grp_kernel_mvt_Pipeline_VITIS_LOOP_24_3_fu_898_x2_ce0;
wire    grp_kernel_mvt_Pipeline_VITIS_LOOP_24_3_fu_898_x2_we0;
wire   [31:0] grp_kernel_mvt_Pipeline_VITIS_LOOP_24_3_fu_898_x2_d0;
wire  signed [31:0] grp_kernel_mvt_Pipeline_VITIS_LOOP_24_3_fu_898_grp_fu_1748_p_din0;
wire  signed [31:0] grp_kernel_mvt_Pipeline_VITIS_LOOP_24_3_fu_898_grp_fu_1748_p_din1;
wire    grp_kernel_mvt_Pipeline_VITIS_LOOP_24_3_fu_898_grp_fu_1748_p_ce;
wire  signed [31:0] grp_kernel_mvt_Pipeline_VITIS_LOOP_24_3_fu_898_grp_fu_1752_p_din0;
wire  signed [31:0] grp_kernel_mvt_Pipeline_VITIS_LOOP_24_3_fu_898_grp_fu_1752_p_din1;
wire    grp_kernel_mvt_Pipeline_VITIS_LOOP_24_3_fu_898_grp_fu_1752_p_ce;
reg    grp_kernel_mvt_Pipeline_VITIS_LOOP_21_1_fu_848_ap_start_reg;
reg    grp_kernel_mvt_Pipeline_VITIS_LOOP_24_3_fu_898_ap_start_reg;
wire    ap_CS_fsm_state24;
wire   [47:0] grp_fu_1748_p2;
reg  signed [31:0] grp_fu_1748_p0;
reg  signed [31:0] grp_fu_1748_p1;
reg    grp_fu_1748_ce;
wire   [47:0] grp_fu_1752_p2;
reg  signed [31:0] grp_fu_1752_p0;
reg  signed [31:0] grp_fu_1752_p1;
reg    grp_fu_1752_ce;
reg   [23:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
wire    ap_ST_fsm_state18_blk;
wire    ap_ST_fsm_state19_blk;
wire    ap_ST_fsm_state20_blk;
wire    ap_ST_fsm_state21_blk;
reg    ap_ST_fsm_state22_blk;
wire    ap_ST_fsm_state23_blk;
reg    ap_ST_fsm_state24_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 24'd1;
#0 grp_kernel_mvt_Pipeline_VITIS_LOOP_21_1_fu_848_ap_start_reg = 1'b0;
#0 grp_kernel_mvt_Pipeline_VITIS_LOOP_24_3_fu_898_ap_start_reg = 1'b0;
end

kernel_mvt_kernel_mvt_Pipeline_VITIS_LOOP_21_1 grp_kernel_mvt_Pipeline_VITIS_LOOP_21_1_fu_848(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_kernel_mvt_Pipeline_VITIS_LOOP_21_1_fu_848_ap_start),
    .ap_done(grp_kernel_mvt_Pipeline_VITIS_LOOP_21_1_fu_848_ap_done),
    .ap_idle(grp_kernel_mvt_Pipeline_VITIS_LOOP_21_1_fu_848_ap_idle),
    .ap_ready(grp_kernel_mvt_Pipeline_VITIS_LOOP_21_1_fu_848_ap_ready),
    .A_address0(grp_kernel_mvt_Pipeline_VITIS_LOOP_21_1_fu_848_A_address0),
    .A_ce0(grp_kernel_mvt_Pipeline_VITIS_LOOP_21_1_fu_848_A_ce0),
    .A_q0(A_q0),
    .A_address1(grp_kernel_mvt_Pipeline_VITIS_LOOP_21_1_fu_848_A_address1),
    .A_ce1(grp_kernel_mvt_Pipeline_VITIS_LOOP_21_1_fu_848_A_ce1),
    .A_q1(A_q1),
    .x1_address0(grp_kernel_mvt_Pipeline_VITIS_LOOP_21_1_fu_848_x1_address0),
    .x1_ce0(grp_kernel_mvt_Pipeline_VITIS_LOOP_21_1_fu_848_x1_ce0),
    .x1_we0(grp_kernel_mvt_Pipeline_VITIS_LOOP_21_1_fu_848_x1_we0),
    .x1_d0(grp_kernel_mvt_Pipeline_VITIS_LOOP_21_1_fu_848_x1_d0),
    .x1_q0(x1_q0),
    .sext_ln23(y_1_load_reg_958),
    .sext_ln23_1(y_1_load_1_reg_963),
    .sext_ln23_2(y_1_load_2_reg_978),
    .sext_ln23_3(y_1_load_3_reg_983),
    .sext_ln23_4(y_1_load_4_reg_1008),
    .sext_ln23_5(y_1_load_5_reg_1013),
    .sext_ln23_6(y_1_load_6_reg_1048),
    .sext_ln23_7(y_1_load_7_reg_1053),
    .sext_ln23_8(y_1_load_8_reg_1088),
    .sext_ln23_9(y_1_load_9_reg_1093),
    .sext_ln23_10(y_1_load_10_reg_1128),
    .sext_ln23_11(y_1_load_11_reg_1133),
    .sext_ln23_12(y_1_load_12_reg_1168),
    .sext_ln23_13(y_1_load_13_reg_1173),
    .sext_ln23_14(y_1_load_14_reg_1208),
    .sext_ln23_15(y_1_load_15_reg_1213),
    .sext_ln23_16(y_1_load_16_reg_1248),
    .sext_ln23_17(y_1_load_17_reg_1253),
    .sext_ln23_18(y_1_load_18_reg_1288),
    .sext_ln23_19(y_1_load_19_reg_1293),
    .sext_ln23_20(y_1_load_20_reg_1328),
    .sext_ln23_21(y_1_load_21_reg_1333),
    .sext_ln23_22(y_1_load_22_reg_1368),
    .sext_ln23_23(y_1_load_23_reg_1373),
    .sext_ln23_24(y_1_load_24_reg_1408),
    .sext_ln23_25(y_1_load_25_reg_1413),
    .sext_ln23_26(y_1_load_26_reg_1448),
    .sext_ln23_27(y_1_load_27_reg_1453),
    .sext_ln23_28(y_1_load_28_reg_1488),
    .sext_ln23_29(y_1_load_29_reg_1493),
    .sext_ln23_30(y_1_load_30_reg_1528),
    .sext_ln23_31(y_1_load_31_reg_1533),
    .sext_ln23_32(y_1_load_32_reg_1568),
    .sext_ln23_33(y_1_load_33_reg_1573),
    .sext_ln23_34(y_1_load_34_reg_1608),
    .sext_ln23_35(y_1_load_35_reg_1613),
    .sext_ln23_36(y_1_load_36_reg_1648),
    .sext_ln23_37(y_1_load_37_reg_1653),
    .sext_ln23_38(y_1_load_38_reg_1688),
    .sext_ln21(y_1_load_39_reg_1693),
    .grp_fu_1748_p_din0(grp_kernel_mvt_Pipeline_VITIS_LOOP_21_1_fu_848_grp_fu_1748_p_din0),
    .grp_fu_1748_p_din1(grp_kernel_mvt_Pipeline_VITIS_LOOP_21_1_fu_848_grp_fu_1748_p_din1),
    .grp_fu_1748_p_dout0(grp_fu_1748_p2),
    .grp_fu_1748_p_ce(grp_kernel_mvt_Pipeline_VITIS_LOOP_21_1_fu_848_grp_fu_1748_p_ce),
    .grp_fu_1752_p_din0(grp_kernel_mvt_Pipeline_VITIS_LOOP_21_1_fu_848_grp_fu_1752_p_din0),
    .grp_fu_1752_p_din1(grp_kernel_mvt_Pipeline_VITIS_LOOP_21_1_fu_848_grp_fu_1752_p_din1),
    .grp_fu_1752_p_dout0(grp_fu_1752_p2),
    .grp_fu_1752_p_ce(grp_kernel_mvt_Pipeline_VITIS_LOOP_21_1_fu_848_grp_fu_1752_p_ce)
);

kernel_mvt_kernel_mvt_Pipeline_VITIS_LOOP_24_3 grp_kernel_mvt_Pipeline_VITIS_LOOP_24_3_fu_898(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_kernel_mvt_Pipeline_VITIS_LOOP_24_3_fu_898_ap_start),
    .ap_done(grp_kernel_mvt_Pipeline_VITIS_LOOP_24_3_fu_898_ap_done),
    .ap_idle(grp_kernel_mvt_Pipeline_VITIS_LOOP_24_3_fu_898_ap_idle),
    .ap_ready(grp_kernel_mvt_Pipeline_VITIS_LOOP_24_3_fu_898_ap_ready),
    .A_address0(grp_kernel_mvt_Pipeline_VITIS_LOOP_24_3_fu_898_A_address0),
    .A_ce0(grp_kernel_mvt_Pipeline_VITIS_LOOP_24_3_fu_898_A_ce0),
    .A_q0(A_q0),
    .A_address1(grp_kernel_mvt_Pipeline_VITIS_LOOP_24_3_fu_898_A_address1),
    .A_ce1(grp_kernel_mvt_Pipeline_VITIS_LOOP_24_3_fu_898_A_ce1),
    .A_q1(A_q1),
    .x2_address0(grp_kernel_mvt_Pipeline_VITIS_LOOP_24_3_fu_898_x2_address0),
    .x2_ce0(grp_kernel_mvt_Pipeline_VITIS_LOOP_24_3_fu_898_x2_ce0),
    .x2_we0(grp_kernel_mvt_Pipeline_VITIS_LOOP_24_3_fu_898_x2_we0),
    .x2_d0(grp_kernel_mvt_Pipeline_VITIS_LOOP_24_3_fu_898_x2_d0),
    .x2_q0(x2_q0),
    .sext_ln26(y_2_load_reg_1028),
    .sext_ln26_1(y_2_load_1_reg_1033),
    .sext_ln26_2(y_2_load_2_reg_1068),
    .sext_ln26_3(y_2_load_3_reg_1073),
    .sext_ln26_4(y_2_load_4_reg_1108),
    .sext_ln26_5(y_2_load_5_reg_1113),
    .sext_ln26_6(y_2_load_6_reg_1148),
    .sext_ln26_7(y_2_load_7_reg_1153),
    .sext_ln26_8(y_2_load_8_reg_1188),
    .sext_ln26_9(y_2_load_9_reg_1193),
    .sext_ln26_10(y_2_load_10_reg_1228),
    .sext_ln26_11(y_2_load_11_reg_1233),
    .sext_ln26_12(y_2_load_12_reg_1268),
    .sext_ln26_13(y_2_load_13_reg_1273),
    .sext_ln26_14(y_2_load_14_reg_1308),
    .sext_ln26_15(y_2_load_15_reg_1313),
    .sext_ln26_16(y_2_load_16_reg_1348),
    .sext_ln26_17(y_2_load_17_reg_1353),
    .sext_ln26_18(y_2_load_18_reg_1388),
    .sext_ln26_19(y_2_load_19_reg_1393),
    .sext_ln26_20(y_2_load_20_reg_1428),
    .sext_ln26_21(y_2_load_21_reg_1433),
    .sext_ln26_22(y_2_load_22_reg_1468),
    .sext_ln26_23(y_2_load_23_reg_1473),
    .sext_ln26_24(y_2_load_24_reg_1508),
    .sext_ln26_25(y_2_load_25_reg_1513),
    .sext_ln26_26(y_2_load_26_reg_1548),
    .sext_ln26_27(y_2_load_27_reg_1553),
    .sext_ln26_28(y_2_load_28_reg_1588),
    .sext_ln26_29(y_2_load_29_reg_1593),
    .sext_ln26_30(y_2_load_30_reg_1628),
    .sext_ln26_31(y_2_load_31_reg_1633),
    .sext_ln26_32(y_2_load_32_reg_1668),
    .sext_ln26_33(y_2_load_33_reg_1673),
    .sext_ln26_34(y_2_load_34_reg_1698),
    .sext_ln26_35(y_2_load_35_reg_1703),
    .sext_ln26_36(y_2_load_36_reg_1718),
    .sext_ln26_37(y_2_load_37_reg_1723),
    .sext_ln26_38(y_2_load_38_reg_1738),
    .y_2_load_39_cast(y_2_load_39_reg_1743),
    .grp_fu_1748_p_din0(grp_kernel_mvt_Pipeline_VITIS_LOOP_24_3_fu_898_grp_fu_1748_p_din0),
    .grp_fu_1748_p_din1(grp_kernel_mvt_Pipeline_VITIS_LOOP_24_3_fu_898_grp_fu_1748_p_din1),
    .grp_fu_1748_p_dout0(grp_fu_1748_p2),
    .grp_fu_1748_p_ce(grp_kernel_mvt_Pipeline_VITIS_LOOP_24_3_fu_898_grp_fu_1748_p_ce),
    .grp_fu_1752_p_din0(grp_kernel_mvt_Pipeline_VITIS_LOOP_24_3_fu_898_grp_fu_1752_p_din0),
    .grp_fu_1752_p_din1(grp_kernel_mvt_Pipeline_VITIS_LOOP_24_3_fu_898_grp_fu_1752_p_din1),
    .grp_fu_1752_p_dout0(grp_fu_1752_p2),
    .grp_fu_1752_p_ce(grp_kernel_mvt_Pipeline_VITIS_LOOP_24_3_fu_898_grp_fu_1752_p_ce)
);

kernel_mvt_mul_32s_32s_48_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 48 ))
mul_32s_32s_48_2_1_U89(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1748_p0),
    .din1(grp_fu_1748_p1),
    .ce(grp_fu_1748_ce),
    .dout(grp_fu_1748_p2)
);

kernel_mvt_mul_32s_32s_48_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 48 ))
mul_32s_32s_48_2_1_U90(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1752_p0),
    .din1(grp_fu_1752_p1),
    .ce(grp_fu_1752_ce),
    .dout(grp_fu_1752_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_kernel_mvt_Pipeline_VITIS_LOOP_21_1_fu_848_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state21)) begin
            grp_kernel_mvt_Pipeline_VITIS_LOOP_21_1_fu_848_ap_start_reg <= 1'b1;
        end else if ((grp_kernel_mvt_Pipeline_VITIS_LOOP_21_1_fu_848_ap_ready == 1'b1)) begin
            grp_kernel_mvt_Pipeline_VITIS_LOOP_21_1_fu_848_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_kernel_mvt_Pipeline_VITIS_LOOP_24_3_fu_898_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state23)) begin
            grp_kernel_mvt_Pipeline_VITIS_LOOP_24_3_fu_898_ap_start_reg <= 1'b1;
        end else if ((grp_kernel_mvt_Pipeline_VITIS_LOOP_24_3_fu_898_ap_ready == 1'b1)) begin
            grp_kernel_mvt_Pipeline_VITIS_LOOP_24_3_fu_898_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        y_1_load_10_reg_1128 <= y_1_q1;
        y_1_load_11_reg_1133 <= y_1_q0;
        y_2_load_6_reg_1148 <= y_2_q1;
        y_2_load_7_reg_1153 <= y_2_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        y_1_load_12_reg_1168 <= y_1_q1;
        y_1_load_13_reg_1173 <= y_1_q0;
        y_2_load_8_reg_1188 <= y_2_q1;
        y_2_load_9_reg_1193 <= y_2_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        y_1_load_14_reg_1208 <= y_1_q1;
        y_1_load_15_reg_1213 <= y_1_q0;
        y_2_load_10_reg_1228 <= y_2_q1;
        y_2_load_11_reg_1233 <= y_2_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        y_1_load_16_reg_1248 <= y_1_q1;
        y_1_load_17_reg_1253 <= y_1_q0;
        y_2_load_12_reg_1268 <= y_2_q1;
        y_2_load_13_reg_1273 <= y_2_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        y_1_load_18_reg_1288 <= y_1_q1;
        y_1_load_19_reg_1293 <= y_1_q0;
        y_2_load_14_reg_1308 <= y_2_q1;
        y_2_load_15_reg_1313 <= y_2_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        y_1_load_1_reg_963 <= y_1_q0;
        y_1_load_reg_958 <= y_1_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        y_1_load_20_reg_1328 <= y_1_q1;
        y_1_load_21_reg_1333 <= y_1_q0;
        y_2_load_16_reg_1348 <= y_2_q1;
        y_2_load_17_reg_1353 <= y_2_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        y_1_load_22_reg_1368 <= y_1_q1;
        y_1_load_23_reg_1373 <= y_1_q0;
        y_2_load_18_reg_1388 <= y_2_q1;
        y_2_load_19_reg_1393 <= y_2_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        y_1_load_24_reg_1408 <= y_1_q1;
        y_1_load_25_reg_1413 <= y_1_q0;
        y_2_load_20_reg_1428 <= y_2_q1;
        y_2_load_21_reg_1433 <= y_2_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        y_1_load_26_reg_1448 <= y_1_q1;
        y_1_load_27_reg_1453 <= y_1_q0;
        y_2_load_22_reg_1468 <= y_2_q1;
        y_2_load_23_reg_1473 <= y_2_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        y_1_load_28_reg_1488 <= y_1_q1;
        y_1_load_29_reg_1493 <= y_1_q0;
        y_2_load_24_reg_1508 <= y_2_q1;
        y_2_load_25_reg_1513 <= y_2_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        y_1_load_2_reg_978 <= y_1_q1;
        y_1_load_3_reg_983 <= y_1_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        y_1_load_30_reg_1528 <= y_1_q1;
        y_1_load_31_reg_1533 <= y_1_q0;
        y_2_load_26_reg_1548 <= y_2_q1;
        y_2_load_27_reg_1553 <= y_2_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        y_1_load_32_reg_1568 <= y_1_q1;
        y_1_load_33_reg_1573 <= y_1_q0;
        y_2_load_28_reg_1588 <= y_2_q1;
        y_2_load_29_reg_1593 <= y_2_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        y_1_load_34_reg_1608 <= y_1_q1;
        y_1_load_35_reg_1613 <= y_1_q0;
        y_2_load_30_reg_1628 <= y_2_q1;
        y_2_load_31_reg_1633 <= y_2_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        y_1_load_36_reg_1648 <= y_1_q1;
        y_1_load_37_reg_1653 <= y_1_q0;
        y_2_load_32_reg_1668 <= y_2_q1;
        y_2_load_33_reg_1673 <= y_2_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        y_1_load_38_reg_1688 <= y_1_q1;
        y_1_load_39_reg_1693 <= y_1_q0;
        y_2_load_34_reg_1698 <= y_2_q1;
        y_2_load_35_reg_1703 <= y_2_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        y_1_load_4_reg_1008 <= y_1_q1;
        y_1_load_5_reg_1013 <= y_1_q0;
        y_2_load_1_reg_1033 <= y_2_q0;
        y_2_load_reg_1028 <= y_2_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        y_1_load_6_reg_1048 <= y_1_q1;
        y_1_load_7_reg_1053 <= y_1_q0;
        y_2_load_2_reg_1068 <= y_2_q1;
        y_2_load_3_reg_1073 <= y_2_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        y_1_load_8_reg_1088 <= y_1_q1;
        y_1_load_9_reg_1093 <= y_1_q0;
        y_2_load_4_reg_1108 <= y_2_q1;
        y_2_load_5_reg_1113 <= y_2_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        y_2_load_36_reg_1718 <= y_2_q1;
        y_2_load_37_reg_1723 <= y_2_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        y_2_load_38_reg_1738 <= y_2_q1;
        y_2_load_39_reg_1743 <= y_2_q0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        A_address0 = grp_kernel_mvt_Pipeline_VITIS_LOOP_24_3_fu_898_A_address0;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        A_address0 = grp_kernel_mvt_Pipeline_VITIS_LOOP_21_1_fu_848_A_address0;
    end else begin
        A_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        A_address1 = grp_kernel_mvt_Pipeline_VITIS_LOOP_24_3_fu_898_A_address1;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        A_address1 = grp_kernel_mvt_Pipeline_VITIS_LOOP_21_1_fu_848_A_address1;
    end else begin
        A_address1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        A_ce0 = grp_kernel_mvt_Pipeline_VITIS_LOOP_24_3_fu_898_A_ce0;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        A_ce0 = grp_kernel_mvt_Pipeline_VITIS_LOOP_21_1_fu_848_A_ce0;
    end else begin
        A_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        A_ce1 = grp_kernel_mvt_Pipeline_VITIS_LOOP_24_3_fu_898_A_ce1;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        A_ce1 = grp_kernel_mvt_Pipeline_VITIS_LOOP_21_1_fu_848_A_ce1;
    end else begin
        A_ce1 = 1'b0;
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

assign ap_ST_fsm_state16_blk = 1'b0;

assign ap_ST_fsm_state17_blk = 1'b0;

assign ap_ST_fsm_state18_blk = 1'b0;

assign ap_ST_fsm_state19_blk = 1'b0;

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state20_blk = 1'b0;

assign ap_ST_fsm_state21_blk = 1'b0;

always @ (*) begin
    if ((grp_kernel_mvt_Pipeline_VITIS_LOOP_21_1_fu_848_ap_done == 1'b0)) begin
        ap_ST_fsm_state22_blk = 1'b1;
    end else begin
        ap_ST_fsm_state22_blk = 1'b0;
    end
end

assign ap_ST_fsm_state23_blk = 1'b0;

always @ (*) begin
    if ((grp_kernel_mvt_Pipeline_VITIS_LOOP_24_3_fu_898_ap_done == 1'b0)) begin
        ap_ST_fsm_state24_blk = 1'b1;
    end else begin
        ap_ST_fsm_state24_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if (((grp_kernel_mvt_Pipeline_VITIS_LOOP_24_3_fu_898_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state24))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((grp_kernel_mvt_Pipeline_VITIS_LOOP_24_3_fu_898_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state24))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        grp_fu_1748_ce = grp_kernel_mvt_Pipeline_VITIS_LOOP_24_3_fu_898_grp_fu_1748_p_ce;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        grp_fu_1748_ce = grp_kernel_mvt_Pipeline_VITIS_LOOP_21_1_fu_848_grp_fu_1748_p_ce;
    end else begin
        grp_fu_1748_ce = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        grp_fu_1748_p0 = grp_kernel_mvt_Pipeline_VITIS_LOOP_24_3_fu_898_grp_fu_1748_p_din0;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        grp_fu_1748_p0 = grp_kernel_mvt_Pipeline_VITIS_LOOP_21_1_fu_848_grp_fu_1748_p_din0;
    end else begin
        grp_fu_1748_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        grp_fu_1748_p1 = grp_kernel_mvt_Pipeline_VITIS_LOOP_24_3_fu_898_grp_fu_1748_p_din1;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        grp_fu_1748_p1 = grp_kernel_mvt_Pipeline_VITIS_LOOP_21_1_fu_848_grp_fu_1748_p_din1;
    end else begin
        grp_fu_1748_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        grp_fu_1752_ce = grp_kernel_mvt_Pipeline_VITIS_LOOP_24_3_fu_898_grp_fu_1752_p_ce;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        grp_fu_1752_ce = grp_kernel_mvt_Pipeline_VITIS_LOOP_21_1_fu_848_grp_fu_1752_p_ce;
    end else begin
        grp_fu_1752_ce = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        grp_fu_1752_p0 = grp_kernel_mvt_Pipeline_VITIS_LOOP_24_3_fu_898_grp_fu_1752_p_din0;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        grp_fu_1752_p0 = grp_kernel_mvt_Pipeline_VITIS_LOOP_21_1_fu_848_grp_fu_1752_p_din0;
    end else begin
        grp_fu_1752_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        grp_fu_1752_p1 = grp_kernel_mvt_Pipeline_VITIS_LOOP_24_3_fu_898_grp_fu_1752_p_din1;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        grp_fu_1752_p1 = grp_kernel_mvt_Pipeline_VITIS_LOOP_21_1_fu_848_grp_fu_1752_p_din1;
    end else begin
        grp_fu_1752_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        y_1_address0 = 64'd39;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        y_1_address0 = 64'd37;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        y_1_address0 = 64'd35;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        y_1_address0 = 64'd33;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        y_1_address0 = 64'd31;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        y_1_address0 = 64'd29;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        y_1_address0 = 64'd27;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        y_1_address0 = 64'd25;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        y_1_address0 = 64'd23;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        y_1_address0 = 64'd21;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        y_1_address0 = 64'd19;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        y_1_address0 = 64'd17;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        y_1_address0 = 64'd15;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        y_1_address0 = 64'd13;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        y_1_address0 = 64'd11;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        y_1_address0 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        y_1_address0 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        y_1_address0 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        y_1_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        y_1_address0 = 64'd1;
    end else begin
        y_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        y_1_address1 = 64'd38;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        y_1_address1 = 64'd36;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        y_1_address1 = 64'd34;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        y_1_address1 = 64'd32;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        y_1_address1 = 64'd30;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        y_1_address1 = 64'd28;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        y_1_address1 = 64'd26;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        y_1_address1 = 64'd24;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        y_1_address1 = 64'd22;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        y_1_address1 = 64'd20;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        y_1_address1 = 64'd18;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        y_1_address1 = 64'd16;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        y_1_address1 = 64'd14;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        y_1_address1 = 64'd12;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        y_1_address1 = 64'd10;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        y_1_address1 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        y_1_address1 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        y_1_address1 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        y_1_address1 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        y_1_address1 = 64'd0;
    end else begin
        y_1_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        y_1_ce0 = 1'b1;
    end else begin
        y_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        y_1_ce1 = 1'b1;
    end else begin
        y_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        y_2_address0 = 64'd39;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        y_2_address0 = 64'd37;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        y_2_address0 = 64'd35;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        y_2_address0 = 64'd33;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        y_2_address0 = 64'd31;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        y_2_address0 = 64'd29;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        y_2_address0 = 64'd27;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        y_2_address0 = 64'd25;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        y_2_address0 = 64'd23;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        y_2_address0 = 64'd21;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        y_2_address0 = 64'd19;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        y_2_address0 = 64'd17;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        y_2_address0 = 64'd15;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        y_2_address0 = 64'd13;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        y_2_address0 = 64'd11;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        y_2_address0 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        y_2_address0 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        y_2_address0 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        y_2_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        y_2_address0 = 64'd1;
    end else begin
        y_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        y_2_address1 = 64'd38;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        y_2_address1 = 64'd36;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        y_2_address1 = 64'd34;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        y_2_address1 = 64'd32;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        y_2_address1 = 64'd30;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        y_2_address1 = 64'd28;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        y_2_address1 = 64'd26;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        y_2_address1 = 64'd24;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        y_2_address1 = 64'd22;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        y_2_address1 = 64'd20;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        y_2_address1 = 64'd18;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        y_2_address1 = 64'd16;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        y_2_address1 = 64'd14;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        y_2_address1 = 64'd12;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        y_2_address1 = 64'd10;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        y_2_address1 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        y_2_address1 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        y_2_address1 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        y_2_address1 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        y_2_address1 = 64'd0;
    end else begin
        y_2_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | ((grp_kernel_mvt_Pipeline_VITIS_LOOP_21_1_fu_848_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state22)))) begin
        y_2_ce0 = 1'b1;
    end else begin
        y_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | ((grp_kernel_mvt_Pipeline_VITIS_LOOP_21_1_fu_848_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state22)))) begin
        y_2_ce1 = 1'b1;
    end else begin
        y_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            if (((grp_kernel_mvt_Pipeline_VITIS_LOOP_21_1_fu_848_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state22))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            if (((grp_kernel_mvt_Pipeline_VITIS_LOOP_24_3_fu_898_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state24))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign grp_kernel_mvt_Pipeline_VITIS_LOOP_21_1_fu_848_ap_start = grp_kernel_mvt_Pipeline_VITIS_LOOP_21_1_fu_848_ap_start_reg;

assign grp_kernel_mvt_Pipeline_VITIS_LOOP_24_3_fu_898_ap_start = grp_kernel_mvt_Pipeline_VITIS_LOOP_24_3_fu_898_ap_start_reg;

assign x1_address0 = grp_kernel_mvt_Pipeline_VITIS_LOOP_21_1_fu_848_x1_address0;

assign x1_ce0 = grp_kernel_mvt_Pipeline_VITIS_LOOP_21_1_fu_848_x1_ce0;

assign x1_d0 = grp_kernel_mvt_Pipeline_VITIS_LOOP_21_1_fu_848_x1_d0;

assign x1_we0 = grp_kernel_mvt_Pipeline_VITIS_LOOP_21_1_fu_848_x1_we0;

assign x2_address0 = grp_kernel_mvt_Pipeline_VITIS_LOOP_24_3_fu_898_x2_address0;

assign x2_ce0 = grp_kernel_mvt_Pipeline_VITIS_LOOP_24_3_fu_898_x2_ce0;

assign x2_d0 = grp_kernel_mvt_Pipeline_VITIS_LOOP_24_3_fu_898_x2_d0;

assign x2_we0 = grp_kernel_mvt_Pipeline_VITIS_LOOP_24_3_fu_898_x2_we0;

endmodule //kernel_mvt
