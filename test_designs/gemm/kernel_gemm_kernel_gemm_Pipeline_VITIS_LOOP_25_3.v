// ==============================================================
// Generated by Vitis HLS v2023.1.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module kernel_gemm_kernel_gemm_Pipeline_VITIS_LOOP_25_3 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        C_address0,
        C_ce0,
        C_we0,
        C_d0,
        C_q0,
        C_address1,
        C_ce1,
        C_we1,
        C_d1,
        C_q1,
        add_ln27_48,
        add_ln27_47,
        add_ln27_46,
        add_ln27_45,
        add_ln27_44,
        add_ln27_43,
        add_ln27_42,
        add_ln27_41,
        add_ln27_40,
        add_ln27_39,
        add_ln27_38,
        add_ln27_37,
        add_ln27_36,
        add_ln27_35,
        add_ln27_34,
        add_ln27_33,
        add_ln27_32,
        add_ln27_31,
        add_ln27_30,
        add_ln27_29,
        add_ln27_28,
        add_ln27_27,
        add_ln27_26,
        add_ln27_25,
        phi_mul2,
        empty,
        A_address0,
        A_ce0,
        A_q0,
        B_address0,
        B_ce0,
        B_q0,
        B_address1,
        B_ce1,
        B_q1,
        conv_i70
);

parameter    ap_ST_fsm_state1 = 25'd1;
parameter    ap_ST_fsm_state2 = 25'd2;
parameter    ap_ST_fsm_state3 = 25'd4;
parameter    ap_ST_fsm_state4 = 25'd8;
parameter    ap_ST_fsm_state5 = 25'd16;
parameter    ap_ST_fsm_state6 = 25'd32;
parameter    ap_ST_fsm_state7 = 25'd64;
parameter    ap_ST_fsm_state8 = 25'd128;
parameter    ap_ST_fsm_state9 = 25'd256;
parameter    ap_ST_fsm_state10 = 25'd512;
parameter    ap_ST_fsm_state11 = 25'd1024;
parameter    ap_ST_fsm_state12 = 25'd2048;
parameter    ap_ST_fsm_state13 = 25'd4096;
parameter    ap_ST_fsm_state14 = 25'd8192;
parameter    ap_ST_fsm_state15 = 25'd16384;
parameter    ap_ST_fsm_state16 = 25'd32768;
parameter    ap_ST_fsm_state17 = 25'd65536;
parameter    ap_ST_fsm_state18 = 25'd131072;
parameter    ap_ST_fsm_state19 = 25'd262144;
parameter    ap_ST_fsm_state20 = 25'd524288;
parameter    ap_ST_fsm_state21 = 25'd1048576;
parameter    ap_ST_fsm_state22 = 25'd2097152;
parameter    ap_ST_fsm_state23 = 25'd4194304;
parameter    ap_ST_fsm_state24 = 25'd8388608;
parameter    ap_ST_fsm_state25 = 25'd16777216;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [8:0] C_address0;
output   C_ce0;
output   C_we0;
output  [31:0] C_d0;
input  [31:0] C_q0;
output  [8:0] C_address1;
output   C_ce1;
output   C_we1;
output  [31:0] C_d1;
input  [31:0] C_q1;
input  [8:0] add_ln27_48;
input  [8:0] add_ln27_47;
input  [8:0] add_ln27_46;
input  [8:0] add_ln27_45;
input  [8:0] add_ln27_44;
input  [8:0] add_ln27_43;
input  [8:0] add_ln27_42;
input  [8:0] add_ln27_41;
input  [8:0] add_ln27_40;
input  [8:0] add_ln27_39;
input  [8:0] add_ln27_38;
input  [8:0] add_ln27_37;
input  [8:0] add_ln27_36;
input  [8:0] add_ln27_35;
input  [8:0] add_ln27_34;
input  [8:0] add_ln27_33;
input  [8:0] add_ln27_32;
input  [8:0] add_ln27_31;
input  [8:0] add_ln27_30;
input  [8:0] add_ln27_29;
input  [8:0] add_ln27_28;
input  [8:0] add_ln27_27;
input  [8:0] add_ln27_26;
input  [8:0] add_ln27_25;
input  [8:0] phi_mul2;
input  [9:0] empty;
output  [9:0] A_address0;
output   A_ce0;
input  [31:0] A_q0;
output  [9:0] B_address0;
output   B_ce0;
input  [31:0] B_q0;
output  [9:0] B_address1;
output   B_ce1;
input  [31:0] B_q1;
input  [31:0] conv_i70;

reg ap_idle;
reg[8:0] C_address0;
reg C_ce0;
reg C_we0;
reg[31:0] C_d0;
reg[8:0] C_address1;
reg C_ce1;
reg C_we1;
reg[31:0] C_d1;
reg A_ce0;
reg[9:0] B_address0;
reg B_ce0;
reg[9:0] B_address1;
reg B_ce1;

(* fsm_encoding = "none" *) reg   [24:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_block_state1_pp0_stage0_iter0;
wire   [0:0] icmp_ln25_fu_967_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_CS_fsm_state25;
wire    ap_block_state25_pp0_stage24_iter0;
reg   [31:0] reg_748;
wire    ap_CS_fsm_state2;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_CS_fsm_state5;
wire    ap_block_state5_pp0_stage4_iter0;
wire    ap_CS_fsm_state8;
wire    ap_block_state8_pp0_stage7_iter0;
wire    ap_CS_fsm_state11;
wire    ap_block_state11_pp0_stage10_iter0;
wire    ap_CS_fsm_state14;
wire    ap_block_state14_pp0_stage13_iter0;
reg   [31:0] reg_753;
wire    ap_CS_fsm_state10;
wire    ap_block_state10_pp0_stage9_iter0;
reg   [31:0] reg_757;
reg   [31:0] reg_761;
reg   [31:0] reg_765;
wire    ap_CS_fsm_state3;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_CS_fsm_state6;
wire    ap_block_state6_pp0_stage5_iter0;
wire    ap_CS_fsm_state9;
wire    ap_block_state9_pp0_stage8_iter0;
wire    ap_CS_fsm_state12;
wire    ap_block_state12_pp0_stage11_iter0;
reg   [31:0] reg_769;
reg   [31:0] reg_773;
reg   [31:0] reg_777;
reg   [31:0] reg_781;
wire    ap_CS_fsm_state4;
wire    ap_block_state4_pp0_stage3_iter0;
wire    ap_CS_fsm_state7;
wire    ap_block_state7_pp0_stage6_iter0;
wire    ap_CS_fsm_state13;
wire    ap_block_state13_pp0_stage12_iter0;
reg   [31:0] reg_785;
reg   [31:0] reg_789;
reg   [31:0] reg_793;
reg   [31:0] reg_797;
reg   [31:0] reg_801;
reg   [31:0] reg_805;
wire   [63:0] grp_fu_740_p2;
reg   [63:0] reg_809;
wire    ap_CS_fsm_state15;
wire    ap_block_state15_pp0_stage14_iter0;
wire    ap_CS_fsm_state16;
wire    ap_block_state16_pp0_stage15_iter0;
wire    ap_CS_fsm_state17;
wire    ap_block_state17_pp0_stage16_iter0;
wire    ap_CS_fsm_state18;
wire    ap_block_state18_pp0_stage17_iter0;
wire    ap_CS_fsm_state19;
wire    ap_block_state19_pp0_stage18_iter0;
wire    ap_CS_fsm_state20;
wire    ap_block_state20_pp0_stage19_iter0;
wire    ap_CS_fsm_state21;
wire    ap_block_state21_pp0_stage20_iter0;
wire   [63:0] grp_fu_744_p2;
reg   [63:0] reg_813;
wire  signed [63:0] conv_i70_cast_fu_817_p1;
reg  signed [63:0] conv_i70_cast_reg_1986;
reg   [9:0] phi_mul_load_reg_1991;
reg   [8:0] C_addr_reg_2019;
reg   [8:0] C_addr_1_reg_2025;
reg   [8:0] C_addr_2_reg_2031;
reg   [8:0] C_addr_3_reg_2037;
reg   [8:0] C_addr_4_reg_2043;
reg   [8:0] C_addr_5_reg_2049;
reg   [8:0] C_addr_6_reg_2055;
reg   [8:0] C_addr_7_reg_2061;
reg   [8:0] C_addr_8_reg_2067;
reg   [8:0] C_addr_9_reg_2073;
reg   [8:0] C_addr_10_reg_2079;
reg   [8:0] C_addr_11_reg_2085;
reg   [8:0] C_addr_12_reg_2091;
reg   [8:0] C_addr_13_reg_2097;
reg   [8:0] C_addr_14_reg_2103;
reg   [8:0] C_addr_15_reg_2109;
reg   [8:0] C_addr_16_reg_2115;
reg   [8:0] C_addr_17_reg_2121;
reg   [8:0] C_addr_18_reg_2127;
reg   [8:0] C_addr_19_reg_2133;
reg   [8:0] C_addr_20_reg_2139;
reg   [8:0] C_addr_21_reg_2145;
reg   [8:0] C_addr_22_reg_2151;
reg   [8:0] C_addr_23_reg_2157;
reg   [8:0] C_addr_24_reg_2163;
reg  signed [31:0] A_load_reg_2197;
wire  signed [63:0] grp_fu_736_p2;
reg  signed [63:0] mul_i75_reg_2227;
wire  signed [63:0] sext_ln27_fu_1094_p1;
wire  signed [63:0] sext_ln27_1_fu_1099_p1;
wire  signed [63:0] sext_ln27_2_fu_1124_p1;
wire  signed [63:0] sext_ln27_3_fu_1129_p1;
reg   [31:0] C_load_9_reg_2273;
wire  signed [63:0] sext_ln27_4_fu_1154_p1;
wire  signed [63:0] sext_ln27_5_fu_1159_p1;
reg   [31:0] C_load_10_reg_2298;
reg   [31:0] C_load_11_reg_2303;
wire  signed [63:0] sext_ln27_6_fu_1184_p1;
wire  signed [63:0] sext_ln27_7_fu_1189_p1;
reg   [31:0] C_load_12_reg_2328;
reg   [31:0] C_load_13_reg_2333;
wire  signed [63:0] sext_ln27_8_fu_1214_p1;
wire  signed [63:0] sext_ln27_9_fu_1219_p1;
reg   [31:0] C_load_14_reg_2358;
reg   [31:0] C_load_15_reg_2363;
reg   [31:0] trunc_ln1_reg_2378;
reg   [31:0] trunc_ln27_1_reg_2383;
wire  signed [63:0] sext_ln27_10_fu_1292_p1;
wire  signed [63:0] sext_ln27_11_fu_1297_p1;
reg   [31:0] trunc_ln27_2_reg_2408;
reg   [31:0] trunc_ln27_3_reg_2413;
wire  signed [63:0] sext_ln27_12_fu_1370_p1;
wire  signed [63:0] sext_ln27_13_fu_1375_p1;
reg   [31:0] trunc_ln27_4_reg_2438;
reg   [31:0] trunc_ln27_5_reg_2443;
wire  signed [63:0] sext_ln27_14_fu_1448_p1;
wire  signed [63:0] sext_ln27_15_fu_1453_p1;
reg   [31:0] trunc_ln27_6_reg_2463;
reg   [31:0] trunc_ln27_7_reg_2468;
wire  signed [63:0] sext_ln27_16_fu_1516_p1;
wire  signed [63:0] sext_ln27_17_fu_1521_p1;
reg   [31:0] trunc_ln27_8_reg_2483;
reg   [31:0] trunc_ln27_9_reg_2488;
wire  signed [63:0] sext_ln27_18_fu_1573_p1;
wire  signed [63:0] sext_ln27_19_fu_1578_p1;
reg   [31:0] trunc_ln27_s_reg_2503;
reg   [31:0] trunc_ln27_10_reg_2508;
wire  signed [63:0] sext_ln27_20_fu_1629_p1;
wire  signed [63:0] sext_ln27_21_fu_1634_p1;
reg   [31:0] trunc_ln27_11_reg_2523;
reg   [31:0] trunc_ln27_12_reg_2528;
wire  signed [63:0] sext_ln27_22_fu_1685_p1;
wire  signed [63:0] sext_ln27_23_fu_1690_p1;
reg   [31:0] trunc_ln27_13_reg_2543;
reg   [31:0] trunc_ln27_14_reg_2548;
wire  signed [63:0] sext_ln27_24_fu_1741_p1;
reg   [31:0] trunc_ln27_15_reg_2558;
reg   [31:0] trunc_ln27_16_reg_2563;
reg   [31:0] trunc_ln27_17_reg_2568;
reg   [31:0] trunc_ln27_18_reg_2573;
reg   [31:0] trunc_ln27_19_reg_2578;
reg   [31:0] trunc_ln27_20_reg_2583;
reg   [31:0] trunc_ln27_21_reg_2588;
reg   [31:0] trunc_ln27_22_reg_2593;
reg   [31:0] trunc_ln27_23_reg_2598;
wire    ap_CS_fsm_state22;
wire    ap_block_state22_pp0_stage21_iter0;
wire   [63:0] add_ln27_48_cast_fu_941_p1;
wire   [63:0] add_ln27_47_cast_fu_936_p1;
wire   [63:0] add_ln27_46_cast_fu_931_p1;
wire   [63:0] add_ln27_45_cast_fu_926_p1;
wire   [63:0] add_ln27_44_cast_fu_921_p1;
wire   [63:0] add_ln27_43_cast_fu_916_p1;
wire   [63:0] add_ln27_42_cast_fu_911_p1;
wire   [63:0] add_ln27_41_cast_fu_906_p1;
wire   [63:0] add_ln27_40_cast_fu_901_p1;
wire   [63:0] add_ln27_39_cast_fu_896_p1;
wire   [63:0] add_ln27_38_cast_fu_891_p1;
wire   [63:0] add_ln27_37_cast_fu_886_p1;
wire   [63:0] add_ln27_36_cast_fu_881_p1;
wire   [63:0] add_ln27_35_cast_fu_876_p1;
wire   [63:0] add_ln27_34_cast_fu_871_p1;
wire   [63:0] add_ln27_33_cast_fu_866_p1;
wire   [63:0] add_ln27_32_cast_fu_861_p1;
wire   [63:0] add_ln27_31_cast_fu_856_p1;
wire   [63:0] add_ln27_30_cast_fu_851_p1;
wire   [63:0] add_ln27_29_cast_fu_846_p1;
wire   [63:0] add_ln27_28_cast_fu_841_p1;
wire   [63:0] add_ln27_27_cast_fu_836_p1;
wire   [63:0] add_ln27_26_cast_fu_831_p1;
wire   [63:0] add_ln27_25_cast_fu_826_p1;
wire   [63:0] phi_mul2_cast_fu_821_p1;
wire   [63:0] p_cast_fu_989_p1;
wire   [63:0] zext_ln27_fu_962_p1;
wire   [63:0] zext_ln27_1_fu_1000_p1;
wire   [63:0] zext_ln27_2_fu_1015_p1;
wire   [63:0] zext_ln27_3_fu_1025_p1;
wire   [63:0] zext_ln27_4_fu_1035_p1;
wire   [63:0] zext_ln27_5_fu_1045_p1;
wire   [63:0] zext_ln27_6_fu_1059_p1;
wire   [63:0] zext_ln27_7_fu_1069_p1;
wire   [63:0] zext_ln27_8_fu_1079_p1;
wire   [63:0] zext_ln27_9_fu_1089_p1;
wire   [63:0] zext_ln27_10_fu_1109_p1;
wire   [63:0] zext_ln27_11_fu_1119_p1;
wire   [63:0] zext_ln27_12_fu_1139_p1;
wire   [63:0] zext_ln27_13_fu_1149_p1;
wire   [63:0] zext_ln27_14_fu_1169_p1;
wire   [63:0] zext_ln27_15_fu_1179_p1;
wire   [63:0] zext_ln27_16_fu_1199_p1;
wire   [63:0] zext_ln27_17_fu_1209_p1;
wire   [63:0] zext_ln27_18_fu_1229_p1;
wire   [63:0] zext_ln27_19_fu_1239_p1;
wire   [63:0] zext_ln27_20_fu_1307_p1;
wire   [63:0] zext_ln27_21_fu_1317_p1;
wire   [63:0] zext_ln27_22_fu_1385_p1;
wire   [63:0] zext_ln27_23_fu_1395_p1;
wire   [63:0] zext_ln27_24_fu_1463_p1;
reg   [9:0] phi_mul_fu_158;
wire   [9:0] add_ln27_73_fu_1962_p2;
wire    ap_loop_init;
reg   [9:0] ap_sig_allocacmp_phi_mul_load;
reg   [4:0] k_fu_162;
wire   [4:0] add_ln25_fu_973_p2;
reg   [4:0] ap_sig_allocacmp_k_1;
wire    ap_CS_fsm_state23;
wire    ap_block_state23_pp0_stage22_iter0;
wire    ap_CS_fsm_state24;
wire    ap_block_state24_pp0_stage23_iter0;
wire  signed [31:0] grp_fu_736_p1;
reg  signed [31:0] grp_fu_740_p1;
reg  signed [31:0] grp_fu_744_p1;
wire   [9:0] k_cast1_fu_979_p1;
wire   [9:0] empty_13_fu_983_p2;
wire   [9:0] add_ln27_49_fu_994_p2;
wire   [9:0] add_ln27_50_fu_1010_p2;
wire   [9:0] add_ln27_51_fu_1020_p2;
wire   [9:0] add_ln27_52_fu_1030_p2;
wire   [9:0] add_ln27_53_fu_1040_p2;
wire   [9:0] add_ln27_54_fu_1054_p2;
wire   [9:0] add_ln27_55_fu_1064_p2;
wire   [9:0] add_ln27_56_fu_1074_p2;
wire   [9:0] add_ln27_57_fu_1084_p2;
wire   [9:0] add_ln27_58_fu_1104_p2;
wire   [9:0] add_ln27_59_fu_1114_p2;
wire   [9:0] add_ln27_60_fu_1134_p2;
wire   [9:0] add_ln27_61_fu_1144_p2;
wire   [9:0] add_ln27_62_fu_1164_p2;
wire   [9:0] add_ln27_63_fu_1174_p2;
wire   [9:0] add_ln27_64_fu_1194_p2;
wire   [9:0] add_ln27_65_fu_1204_p2;
wire   [9:0] add_ln27_66_fu_1224_p2;
wire   [9:0] add_ln27_67_fu_1234_p2;
wire   [63:0] shl_ln_fu_1244_p3;
wire   [63:0] add_ln27_fu_1252_p2;
wire   [63:0] shl_ln27_1_fu_1268_p3;
wire   [63:0] add_ln27_1_fu_1276_p2;
wire   [9:0] add_ln27_68_fu_1302_p2;
wire   [9:0] add_ln27_69_fu_1312_p2;
wire   [63:0] shl_ln27_2_fu_1322_p3;
wire   [63:0] add_ln27_2_fu_1330_p2;
wire   [63:0] shl_ln27_3_fu_1346_p3;
wire   [63:0] add_ln27_3_fu_1354_p2;
wire   [9:0] add_ln27_70_fu_1380_p2;
wire   [9:0] add_ln27_71_fu_1390_p2;
wire   [63:0] shl_ln27_4_fu_1400_p3;
wire   [63:0] add_ln27_4_fu_1408_p2;
wire   [63:0] shl_ln27_5_fu_1424_p3;
wire   [63:0] add_ln27_5_fu_1432_p2;
wire   [9:0] add_ln27_72_fu_1458_p2;
wire   [63:0] shl_ln27_6_fu_1468_p3;
wire   [63:0] add_ln27_6_fu_1476_p2;
wire   [63:0] shl_ln27_7_fu_1492_p3;
wire   [63:0] add_ln27_7_fu_1500_p2;
wire   [63:0] shl_ln27_8_fu_1526_p3;
wire   [63:0] add_ln27_8_fu_1534_p2;
wire   [63:0] shl_ln27_9_fu_1550_p3;
wire   [63:0] add_ln27_9_fu_1557_p2;
wire   [63:0] shl_ln27_s_fu_1583_p3;
wire   [63:0] add_ln27_10_fu_1590_p2;
wire   [63:0] shl_ln27_10_fu_1606_p3;
wire   [63:0] add_ln27_11_fu_1613_p2;
wire   [63:0] shl_ln27_11_fu_1639_p3;
wire   [63:0] add_ln27_12_fu_1646_p2;
wire   [63:0] shl_ln27_12_fu_1662_p3;
wire   [63:0] add_ln27_13_fu_1669_p2;
wire   [63:0] shl_ln27_13_fu_1695_p3;
wire   [63:0] add_ln27_14_fu_1702_p2;
wire   [63:0] shl_ln27_14_fu_1718_p3;
wire   [63:0] add_ln27_15_fu_1725_p2;
wire   [63:0] shl_ln27_15_fu_1746_p3;
wire   [63:0] add_ln27_16_fu_1754_p2;
wire   [63:0] shl_ln27_16_fu_1770_p3;
wire   [63:0] add_ln27_17_fu_1778_p2;
wire   [63:0] shl_ln27_17_fu_1794_p3;
wire   [63:0] add_ln27_18_fu_1802_p2;
wire   [63:0] shl_ln27_18_fu_1818_p3;
wire   [63:0] add_ln27_19_fu_1826_p2;
wire   [63:0] shl_ln27_19_fu_1842_p3;
wire   [63:0] add_ln27_20_fu_1850_p2;
wire   [63:0] shl_ln27_20_fu_1866_p3;
wire   [63:0] add_ln27_21_fu_1874_p2;
wire   [63:0] shl_ln27_21_fu_1890_p3;
wire   [63:0] add_ln27_22_fu_1898_p2;
wire   [63:0] shl_ln27_22_fu_1914_p3;
wire   [63:0] add_ln27_23_fu_1922_p2;
wire   [63:0] shl_ln27_23_fu_1938_p3;
wire   [63:0] add_ln27_24_fu_1946_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [24:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
wire    ap_ST_fsm_state18_blk;
wire    ap_ST_fsm_state19_blk;
wire    ap_ST_fsm_state20_blk;
wire    ap_ST_fsm_state21_blk;
wire    ap_ST_fsm_state22_blk;
wire    ap_ST_fsm_state23_blk;
wire    ap_ST_fsm_state24_blk;
wire    ap_ST_fsm_state25_blk;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 25'd1;
#0 ap_done_reg = 1'b0;
end

kernel_gemm_mul_32s_32s_64_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32s_32s_64_2_1_U6(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(A_load_reg_2197),
    .din1(grp_fu_736_p1),
    .ce(1'b1),
    .dout(grp_fu_736_p2)
);

kernel_gemm_mul_64s_32s_64_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_64s_32s_64_5_1_U7(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(mul_i75_reg_2227),
    .din1(grp_fu_740_p1),
    .ce(1'b1),
    .dout(grp_fu_740_p2)
);

kernel_gemm_mul_64s_32s_64_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_64s_32s_64_5_1_U8(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(mul_i75_reg_2227),
    .din1(grp_fu_744_p1),
    .ce(1'b1),
    .dout(grp_fu_744_p2)
);

kernel_gemm_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1))) begin
        if ((icmp_ln25_fu_967_p2 == 1'd0)) begin
            k_fu_162 <= add_ln25_fu_973_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            k_fu_162 <= 5'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1))) begin
        phi_mul_fu_158 <= 10'd0;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        phi_mul_fu_158 <= add_ln27_73_fu_1962_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        reg_748 <= B_q0;
    end else if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state2))) begin
        reg_748 <= B_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        A_load_reg_2197 <= A_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1))) begin
        C_addr_10_reg_2079 <= add_ln27_38_cast_fu_891_p1;
        C_addr_11_reg_2085 <= add_ln27_37_cast_fu_886_p1;
        C_addr_12_reg_2091 <= add_ln27_36_cast_fu_881_p1;
        C_addr_13_reg_2097 <= add_ln27_35_cast_fu_876_p1;
        C_addr_14_reg_2103 <= add_ln27_34_cast_fu_871_p1;
        C_addr_15_reg_2109 <= add_ln27_33_cast_fu_866_p1;
        C_addr_16_reg_2115 <= add_ln27_32_cast_fu_861_p1;
        C_addr_17_reg_2121 <= add_ln27_31_cast_fu_856_p1;
        C_addr_18_reg_2127 <= add_ln27_30_cast_fu_851_p1;
        C_addr_19_reg_2133 <= add_ln27_29_cast_fu_846_p1;
        C_addr_1_reg_2025 <= add_ln27_47_cast_fu_936_p1;
        C_addr_20_reg_2139 <= add_ln27_28_cast_fu_841_p1;
        C_addr_21_reg_2145 <= add_ln27_27_cast_fu_836_p1;
        C_addr_22_reg_2151 <= add_ln27_26_cast_fu_831_p1;
        C_addr_23_reg_2157 <= add_ln27_25_cast_fu_826_p1;
        C_addr_24_reg_2163 <= phi_mul2_cast_fu_821_p1;
        C_addr_2_reg_2031 <= add_ln27_46_cast_fu_931_p1;
        C_addr_3_reg_2037 <= add_ln27_45_cast_fu_926_p1;
        C_addr_4_reg_2043 <= add_ln27_44_cast_fu_921_p1;
        C_addr_5_reg_2049 <= add_ln27_43_cast_fu_916_p1;
        C_addr_6_reg_2055 <= add_ln27_42_cast_fu_911_p1;
        C_addr_7_reg_2061 <= add_ln27_41_cast_fu_906_p1;
        C_addr_8_reg_2067 <= add_ln27_40_cast_fu_901_p1;
        C_addr_9_reg_2073 <= add_ln27_39_cast_fu_896_p1;
        C_addr_reg_2019 <= add_ln27_48_cast_fu_941_p1;
        conv_i70_cast_reg_1986 <= conv_i70_cast_fu_817_p1;
        phi_mul_load_reg_1991 <= ap_sig_allocacmp_phi_mul_load;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        C_load_10_reg_2298 <= C_q1;
        C_load_11_reg_2303 <= C_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        C_load_12_reg_2328 <= C_q1;
        C_load_13_reg_2333 <= C_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        C_load_14_reg_2358 <= C_q1;
        C_load_15_reg_2363 <= C_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        C_load_9_reg_2273 <= C_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        mul_i75_reg_2227 <= grp_fu_736_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state2))) begin
        reg_753 <= C_q1;
        reg_761 <= C_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state2))) begin
        reg_757 <= B_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state3))) begin
        reg_765 <= B_q1;
        reg_773 <= B_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state11))) begin
        reg_769 <= C_q1;
        reg_777 <= C_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state10))) begin
        reg_781 <= B_q1;
        reg_789 <= B_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state12))) begin
        reg_785 <= C_q1;
        reg_793 <= C_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state5))) begin
        reg_797 <= C_q1;
        reg_801 <= C_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state14))) begin
        reg_805 <= C_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state11))) begin
        reg_809 <= grp_fu_740_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state11))) begin
        reg_813 <= grp_fu_744_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        trunc_ln1_reg_2378 <= {{add_ln27_fu_1252_p2[63:32]}};
        trunc_ln27_1_reg_2383 <= {{add_ln27_1_fu_1276_p2[63:32]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        trunc_ln27_10_reg_2508 <= {{add_ln27_11_fu_1613_p2[63:32]}};
        trunc_ln27_s_reg_2503 <= {{add_ln27_10_fu_1590_p2[63:32]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        trunc_ln27_11_reg_2523 <= {{add_ln27_12_fu_1646_p2[63:32]}};
        trunc_ln27_12_reg_2528 <= {{add_ln27_13_fu_1669_p2[63:32]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        trunc_ln27_13_reg_2543 <= {{add_ln27_14_fu_1702_p2[63:32]}};
        trunc_ln27_14_reg_2548 <= {{add_ln27_15_fu_1725_p2[63:32]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        trunc_ln27_15_reg_2558 <= {{add_ln27_16_fu_1754_p2[63:32]}};
        trunc_ln27_16_reg_2563 <= {{add_ln27_17_fu_1778_p2[63:32]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        trunc_ln27_17_reg_2568 <= {{add_ln27_18_fu_1802_p2[63:32]}};
        trunc_ln27_18_reg_2573 <= {{add_ln27_19_fu_1826_p2[63:32]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        trunc_ln27_19_reg_2578 <= {{add_ln27_20_fu_1850_p2[63:32]}};
        trunc_ln27_20_reg_2583 <= {{add_ln27_21_fu_1874_p2[63:32]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        trunc_ln27_21_reg_2588 <= {{add_ln27_22_fu_1898_p2[63:32]}};
        trunc_ln27_22_reg_2593 <= {{add_ln27_23_fu_1922_p2[63:32]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        trunc_ln27_23_reg_2598 <= {{add_ln27_24_fu_1946_p2[63:32]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        trunc_ln27_2_reg_2408 <= {{add_ln27_2_fu_1330_p2[63:32]}};
        trunc_ln27_3_reg_2413 <= {{add_ln27_3_fu_1354_p2[63:32]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        trunc_ln27_4_reg_2438 <= {{add_ln27_4_fu_1408_p2[63:32]}};
        trunc_ln27_5_reg_2443 <= {{add_ln27_5_fu_1432_p2[63:32]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        trunc_ln27_6_reg_2463 <= {{add_ln27_6_fu_1476_p2[63:32]}};
        trunc_ln27_7_reg_2468 <= {{add_ln27_7_fu_1500_p2[63:32]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        trunc_ln27_8_reg_2483 <= {{add_ln27_8_fu_1534_p2[63:32]}};
        trunc_ln27_9_reg_2488 <= {{add_ln27_9_fu_1557_p2[63:32]}};
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1))) begin
        A_ce0 = 1'b1;
    end else begin
        A_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        B_address0 = zext_ln27_24_fu_1463_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        B_address0 = zext_ln27_23_fu_1395_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        B_address0 = zext_ln27_21_fu_1317_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        B_address0 = zext_ln27_19_fu_1239_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        B_address0 = zext_ln27_17_fu_1209_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        B_address0 = zext_ln27_15_fu_1179_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        B_address0 = zext_ln27_13_fu_1149_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        B_address0 = zext_ln27_11_fu_1119_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        B_address0 = zext_ln27_9_fu_1089_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        B_address0 = zext_ln27_7_fu_1069_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        B_address0 = zext_ln27_5_fu_1045_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        B_address0 = zext_ln27_3_fu_1025_p1;
    end else if (((icmp_ln25_fu_967_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        B_address0 = zext_ln27_1_fu_1000_p1;
    end else begin
        B_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        B_address1 = zext_ln27_22_fu_1385_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        B_address1 = zext_ln27_20_fu_1307_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        B_address1 = zext_ln27_18_fu_1229_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        B_address1 = zext_ln27_16_fu_1199_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        B_address1 = zext_ln27_14_fu_1169_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        B_address1 = zext_ln27_12_fu_1139_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        B_address1 = zext_ln27_10_fu_1109_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        B_address1 = zext_ln27_8_fu_1079_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        B_address1 = zext_ln27_6_fu_1059_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        B_address1 = zext_ln27_4_fu_1035_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        B_address1 = zext_ln27_2_fu_1015_p1;
    end else if (((icmp_ln25_fu_967_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        B_address1 = zext_ln27_fu_962_p1;
    end else begin
        B_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state2) | ((icmp_ln25_fu_967_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1)))) begin
        B_ce0 = 1'b1;
    end else begin
        B_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state2) | ((icmp_ln25_fu_967_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1)))) begin
        B_ce1 = 1'b1;
    end else begin
        B_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        C_address0 = C_addr_reg_2019;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        C_address0 = C_addr_2_reg_2031;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        C_address0 = C_addr_4_reg_2043;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        C_address0 = C_addr_6_reg_2055;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        C_address0 = C_addr_8_reg_2067;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        C_address0 = C_addr_10_reg_2079;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        C_address0 = C_addr_12_reg_2091;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        C_address0 = C_addr_14_reg_2103;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        C_address0 = C_addr_16_reg_2115;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        C_address0 = C_addr_18_reg_2127;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        C_address0 = C_addr_20_reg_2139;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        C_address0 = C_addr_22_reg_2151;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        C_address0 = C_addr_24_reg_2163;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        C_address0 = C_addr_1_reg_2025;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        C_address0 = C_addr_3_reg_2037;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        C_address0 = C_addr_5_reg_2049;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        C_address0 = C_addr_7_reg_2061;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        C_address0 = C_addr_9_reg_2073;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        C_address0 = C_addr_11_reg_2085;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        C_address0 = C_addr_13_reg_2097;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        C_address0 = C_addr_15_reg_2109;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        C_address0 = C_addr_17_reg_2121;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        C_address0 = C_addr_19_reg_2133;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        C_address0 = C_addr_21_reg_2145;
    end else if (((icmp_ln25_fu_967_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        C_address0 = add_ln27_25_cast_fu_826_p1;
    end else begin
        C_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        C_address1 = C_addr_1_reg_2025;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        C_address1 = C_addr_3_reg_2037;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        C_address1 = C_addr_5_reg_2049;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        C_address1 = C_addr_7_reg_2061;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        C_address1 = C_addr_9_reg_2073;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        C_address1 = C_addr_11_reg_2085;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        C_address1 = C_addr_13_reg_2097;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        C_address1 = C_addr_15_reg_2109;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        C_address1 = C_addr_17_reg_2121;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        C_address1 = C_addr_19_reg_2133;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        C_address1 = C_addr_21_reg_2145;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        C_address1 = C_addr_23_reg_2157;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        C_address1 = C_addr_reg_2019;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        C_address1 = C_addr_2_reg_2031;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        C_address1 = C_addr_4_reg_2043;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        C_address1 = C_addr_6_reg_2055;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        C_address1 = C_addr_8_reg_2067;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        C_address1 = C_addr_10_reg_2079;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        C_address1 = C_addr_12_reg_2091;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        C_address1 = C_addr_14_reg_2103;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        C_address1 = C_addr_16_reg_2115;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        C_address1 = C_addr_18_reg_2127;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        C_address1 = C_addr_20_reg_2139;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        C_address1 = C_addr_22_reg_2151;
    end else if (((icmp_ln25_fu_967_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        C_address1 = phi_mul2_cast_fu_821_p1;
    end else begin
        C_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state2) | ((icmp_ln25_fu_967_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1)))) begin
        C_ce0 = 1'b1;
    end else begin
        C_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state2) | ((icmp_ln25_fu_967_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1)))) begin
        C_ce1 = 1'b1;
    end else begin
        C_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        C_d0 = trunc_ln27_23_reg_2598;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        C_d0 = trunc_ln27_21_reg_2588;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        C_d0 = trunc_ln27_19_reg_2578;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        C_d0 = trunc_ln27_17_reg_2568;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        C_d0 = trunc_ln27_15_reg_2558;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        C_d0 = trunc_ln27_13_reg_2543;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        C_d0 = trunc_ln27_11_reg_2523;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        C_d0 = trunc_ln27_s_reg_2503;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        C_d0 = trunc_ln27_8_reg_2483;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        C_d0 = trunc_ln27_6_reg_2463;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        C_d0 = trunc_ln27_4_reg_2438;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        C_d0 = trunc_ln27_2_reg_2408;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        C_d0 = trunc_ln1_reg_2378;
    end else begin
        C_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        C_d1 = trunc_ln27_22_reg_2593;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        C_d1 = trunc_ln27_20_reg_2583;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        C_d1 = trunc_ln27_18_reg_2573;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        C_d1 = trunc_ln27_16_reg_2563;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        C_d1 = trunc_ln27_14_reg_2548;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        C_d1 = trunc_ln27_12_reg_2528;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        C_d1 = trunc_ln27_10_reg_2508;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        C_d1 = trunc_ln27_9_reg_2488;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        C_d1 = trunc_ln27_7_reg_2468;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        C_d1 = trunc_ln27_5_reg_2443;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        C_d1 = trunc_ln27_3_reg_2413;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        C_d1 = trunc_ln27_1_reg_2383;
    end else begin
        C_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        C_we0 = 1'b1;
    end else begin
        C_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14))) begin
        C_we1 = 1'b1;
    end else begin
        C_we1 = 1'b0;
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

assign ap_ST_fsm_state16_blk = 1'b0;

assign ap_ST_fsm_state17_blk = 1'b0;

assign ap_ST_fsm_state18_blk = 1'b0;

assign ap_ST_fsm_state19_blk = 1'b0;

always @ (*) begin
    if ((ap_start_int == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state20_blk = 1'b0;

assign ap_ST_fsm_state21_blk = 1'b0;

assign ap_ST_fsm_state22_blk = 1'b0;

assign ap_ST_fsm_state23_blk = 1'b0;

assign ap_ST_fsm_state24_blk = 1'b0;

assign ap_ST_fsm_state25_blk = 1'b0;

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if (((icmp_ln25_fu_967_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_sig_allocacmp_k_1 = 5'd0;
    end else begin
        ap_sig_allocacmp_k_1 = k_fu_162;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_sig_allocacmp_phi_mul_load = 10'd0;
    end else begin
        ap_sig_allocacmp_phi_mul_load = phi_mul_fu_158;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_fu_740_p1 = sext_ln27_24_fu_1741_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_740_p1 = sext_ln27_22_fu_1685_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_fu_740_p1 = sext_ln27_20_fu_1629_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_fu_740_p1 = sext_ln27_18_fu_1573_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_fu_740_p1 = sext_ln27_16_fu_1516_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_fu_740_p1 = sext_ln27_14_fu_1448_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_fu_740_p1 = sext_ln27_12_fu_1370_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_fu_740_p1 = sext_ln27_10_fu_1292_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_fu_740_p1 = sext_ln27_8_fu_1214_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_740_p1 = sext_ln27_6_fu_1184_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_fu_740_p1 = sext_ln27_4_fu_1154_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_fu_740_p1 = sext_ln27_2_fu_1124_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_740_p1 = sext_ln27_fu_1094_p1;
    end else begin
        grp_fu_740_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_744_p1 = sext_ln27_23_fu_1690_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_fu_744_p1 = sext_ln27_21_fu_1634_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_fu_744_p1 = sext_ln27_19_fu_1578_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_fu_744_p1 = sext_ln27_17_fu_1521_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_fu_744_p1 = sext_ln27_15_fu_1453_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_fu_744_p1 = sext_ln27_13_fu_1375_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_fu_744_p1 = sext_ln27_11_fu_1297_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_fu_744_p1 = sext_ln27_9_fu_1219_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_744_p1 = sext_ln27_7_fu_1189_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_fu_744_p1 = sext_ln27_5_fu_1159_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_fu_744_p1 = sext_ln27_3_fu_1129_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_744_p1 = sext_ln27_1_fu_1099_p1;
    end else begin
        grp_fu_744_p1 = 'bx;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((icmp_ln25_fu_967_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign A_address0 = p_cast_fu_989_p1;

assign add_ln25_fu_973_p2 = (ap_sig_allocacmp_k_1 + 5'd1);

assign add_ln27_10_fu_1590_p2 = (shl_ln27_s_fu_1583_p3 + reg_809);

assign add_ln27_11_fu_1613_p2 = (shl_ln27_10_fu_1606_p3 + reg_813);

assign add_ln27_12_fu_1646_p2 = (shl_ln27_11_fu_1639_p3 + reg_809);

assign add_ln27_13_fu_1669_p2 = (shl_ln27_12_fu_1662_p3 + reg_813);

assign add_ln27_14_fu_1702_p2 = (shl_ln27_13_fu_1695_p3 + reg_809);

assign add_ln27_15_fu_1725_p2 = (shl_ln27_14_fu_1718_p3 + reg_813);

assign add_ln27_16_fu_1754_p2 = (shl_ln27_15_fu_1746_p3 + reg_809);

assign add_ln27_17_fu_1778_p2 = (shl_ln27_16_fu_1770_p3 + reg_813);

assign add_ln27_18_fu_1802_p2 = (shl_ln27_17_fu_1794_p3 + reg_809);

assign add_ln27_19_fu_1826_p2 = (shl_ln27_18_fu_1818_p3 + reg_813);

assign add_ln27_1_fu_1276_p2 = (shl_ln27_1_fu_1268_p3 + reg_813);

assign add_ln27_20_fu_1850_p2 = (shl_ln27_19_fu_1842_p3 + reg_809);

assign add_ln27_21_fu_1874_p2 = (shl_ln27_20_fu_1866_p3 + reg_813);

assign add_ln27_22_fu_1898_p2 = (shl_ln27_21_fu_1890_p3 + reg_809);

assign add_ln27_23_fu_1922_p2 = (shl_ln27_22_fu_1914_p3 + reg_813);

assign add_ln27_24_fu_1946_p2 = (shl_ln27_23_fu_1938_p3 + reg_809);

assign add_ln27_25_cast_fu_826_p1 = add_ln27_25;

assign add_ln27_26_cast_fu_831_p1 = add_ln27_26;

assign add_ln27_27_cast_fu_836_p1 = add_ln27_27;

assign add_ln27_28_cast_fu_841_p1 = add_ln27_28;

assign add_ln27_29_cast_fu_846_p1 = add_ln27_29;

assign add_ln27_2_fu_1330_p2 = (shl_ln27_2_fu_1322_p3 + reg_809);

assign add_ln27_30_cast_fu_851_p1 = add_ln27_30;

assign add_ln27_31_cast_fu_856_p1 = add_ln27_31;

assign add_ln27_32_cast_fu_861_p1 = add_ln27_32;

assign add_ln27_33_cast_fu_866_p1 = add_ln27_33;

assign add_ln27_34_cast_fu_871_p1 = add_ln27_34;

assign add_ln27_35_cast_fu_876_p1 = add_ln27_35;

assign add_ln27_36_cast_fu_881_p1 = add_ln27_36;

assign add_ln27_37_cast_fu_886_p1 = add_ln27_37;

assign add_ln27_38_cast_fu_891_p1 = add_ln27_38;

assign add_ln27_39_cast_fu_896_p1 = add_ln27_39;

assign add_ln27_3_fu_1354_p2 = (shl_ln27_3_fu_1346_p3 + reg_813);

assign add_ln27_40_cast_fu_901_p1 = add_ln27_40;

assign add_ln27_41_cast_fu_906_p1 = add_ln27_41;

assign add_ln27_42_cast_fu_911_p1 = add_ln27_42;

assign add_ln27_43_cast_fu_916_p1 = add_ln27_43;

assign add_ln27_44_cast_fu_921_p1 = add_ln27_44;

assign add_ln27_45_cast_fu_926_p1 = add_ln27_45;

assign add_ln27_46_cast_fu_931_p1 = add_ln27_46;

assign add_ln27_47_cast_fu_936_p1 = add_ln27_47;

assign add_ln27_48_cast_fu_941_p1 = add_ln27_48;

assign add_ln27_49_fu_994_p2 = (ap_sig_allocacmp_phi_mul_load + 10'd1);

assign add_ln27_4_fu_1408_p2 = (shl_ln27_4_fu_1400_p3 + reg_809);

assign add_ln27_50_fu_1010_p2 = (phi_mul_load_reg_1991 + 10'd2);

assign add_ln27_51_fu_1020_p2 = (phi_mul_load_reg_1991 + 10'd3);

assign add_ln27_52_fu_1030_p2 = (phi_mul_load_reg_1991 + 10'd4);

assign add_ln27_53_fu_1040_p2 = (phi_mul_load_reg_1991 + 10'd5);

assign add_ln27_54_fu_1054_p2 = (phi_mul_load_reg_1991 + 10'd6);

assign add_ln27_55_fu_1064_p2 = (phi_mul_load_reg_1991 + 10'd7);

assign add_ln27_56_fu_1074_p2 = (phi_mul_load_reg_1991 + 10'd8);

assign add_ln27_57_fu_1084_p2 = (phi_mul_load_reg_1991 + 10'd9);

assign add_ln27_58_fu_1104_p2 = (phi_mul_load_reg_1991 + 10'd10);

assign add_ln27_59_fu_1114_p2 = (phi_mul_load_reg_1991 + 10'd11);

assign add_ln27_5_fu_1432_p2 = (shl_ln27_5_fu_1424_p3 + reg_813);

assign add_ln27_60_fu_1134_p2 = (phi_mul_load_reg_1991 + 10'd12);

assign add_ln27_61_fu_1144_p2 = (phi_mul_load_reg_1991 + 10'd13);

assign add_ln27_62_fu_1164_p2 = (phi_mul_load_reg_1991 + 10'd14);

assign add_ln27_63_fu_1174_p2 = (phi_mul_load_reg_1991 + 10'd15);

assign add_ln27_64_fu_1194_p2 = (phi_mul_load_reg_1991 + 10'd16);

assign add_ln27_65_fu_1204_p2 = (phi_mul_load_reg_1991 + 10'd17);

assign add_ln27_66_fu_1224_p2 = (phi_mul_load_reg_1991 + 10'd18);

assign add_ln27_67_fu_1234_p2 = (phi_mul_load_reg_1991 + 10'd19);

assign add_ln27_68_fu_1302_p2 = (phi_mul_load_reg_1991 + 10'd20);

assign add_ln27_69_fu_1312_p2 = (phi_mul_load_reg_1991 + 10'd21);

assign add_ln27_6_fu_1476_p2 = (shl_ln27_6_fu_1468_p3 + reg_809);

assign add_ln27_70_fu_1380_p2 = (phi_mul_load_reg_1991 + 10'd22);

assign add_ln27_71_fu_1390_p2 = (phi_mul_load_reg_1991 + 10'd23);

assign add_ln27_72_fu_1458_p2 = (phi_mul_load_reg_1991 + 10'd24);

assign add_ln27_73_fu_1962_p2 = (phi_mul_load_reg_1991 + 10'd25);

assign add_ln27_7_fu_1500_p2 = (shl_ln27_7_fu_1492_p3 + reg_813);

assign add_ln27_8_fu_1534_p2 = (shl_ln27_8_fu_1526_p3 + reg_809);

assign add_ln27_9_fu_1557_p2 = (shl_ln27_9_fu_1550_p3 + reg_813);

assign add_ln27_fu_1252_p2 = (shl_ln_fu_1244_p3 + reg_809);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_block_state10_pp0_stage9_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage10_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage11_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage12_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage13_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage14_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage15_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage16_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage17_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage18_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_start_int == 1'b0);
end

assign ap_block_state20_pp0_stage19_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage20_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage21_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage22_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage23_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage24_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage8_iter0 = ~(1'b1 == 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign conv_i70_cast_fu_817_p1 = $signed(conv_i70);

assign empty_13_fu_983_p2 = (empty + k_cast1_fu_979_p1);

assign grp_fu_736_p1 = conv_i70_cast_reg_1986;

assign icmp_ln25_fu_967_p2 = ((ap_sig_allocacmp_k_1 == 5'd30) ? 1'b1 : 1'b0);

assign k_cast1_fu_979_p1 = ap_sig_allocacmp_k_1;

assign p_cast_fu_989_p1 = empty_13_fu_983_p2;

assign phi_mul2_cast_fu_821_p1 = phi_mul2;

assign sext_ln27_10_fu_1292_p1 = $signed(reg_781);

assign sext_ln27_11_fu_1297_p1 = $signed(reg_789);

assign sext_ln27_12_fu_1370_p1 = $signed(reg_748);

assign sext_ln27_13_fu_1375_p1 = $signed(reg_757);

assign sext_ln27_14_fu_1448_p1 = $signed(reg_765);

assign sext_ln27_15_fu_1453_p1 = $signed(reg_773);

assign sext_ln27_16_fu_1516_p1 = $signed(reg_781);

assign sext_ln27_17_fu_1521_p1 = $signed(reg_789);

assign sext_ln27_18_fu_1573_p1 = $signed(reg_748);

assign sext_ln27_19_fu_1578_p1 = $signed(reg_757);

assign sext_ln27_1_fu_1099_p1 = $signed(reg_757);

assign sext_ln27_20_fu_1629_p1 = $signed(reg_765);

assign sext_ln27_21_fu_1634_p1 = $signed(reg_773);

assign sext_ln27_22_fu_1685_p1 = $signed(reg_781);

assign sext_ln27_23_fu_1690_p1 = $signed(reg_789);

assign sext_ln27_24_fu_1741_p1 = $signed(reg_748);

assign sext_ln27_2_fu_1124_p1 = $signed(reg_765);

assign sext_ln27_3_fu_1129_p1 = $signed(reg_773);

assign sext_ln27_4_fu_1154_p1 = $signed(reg_781);

assign sext_ln27_5_fu_1159_p1 = $signed(reg_789);

assign sext_ln27_6_fu_1184_p1 = $signed(reg_748);

assign sext_ln27_7_fu_1189_p1 = $signed(reg_757);

assign sext_ln27_8_fu_1214_p1 = $signed(reg_765);

assign sext_ln27_9_fu_1219_p1 = $signed(reg_773);

assign sext_ln27_fu_1094_p1 = $signed(reg_748);

assign shl_ln27_10_fu_1606_p3 = {{C_load_11_reg_2303}, {32'd0}};

assign shl_ln27_11_fu_1639_p3 = {{C_load_12_reg_2328}, {32'd0}};

assign shl_ln27_12_fu_1662_p3 = {{C_load_13_reg_2333}, {32'd0}};

assign shl_ln27_13_fu_1695_p3 = {{C_load_14_reg_2358}, {32'd0}};

assign shl_ln27_14_fu_1718_p3 = {{C_load_15_reg_2363}, {32'd0}};

assign shl_ln27_15_fu_1746_p3 = {{reg_753}, {32'd0}};

assign shl_ln27_16_fu_1770_p3 = {{reg_761}, {32'd0}};

assign shl_ln27_17_fu_1794_p3 = {{reg_769}, {32'd0}};

assign shl_ln27_18_fu_1818_p3 = {{reg_777}, {32'd0}};

assign shl_ln27_19_fu_1842_p3 = {{reg_785}, {32'd0}};

assign shl_ln27_1_fu_1268_p3 = {{reg_761}, {32'd0}};

assign shl_ln27_20_fu_1866_p3 = {{reg_793}, {32'd0}};

assign shl_ln27_21_fu_1890_p3 = {{reg_797}, {32'd0}};

assign shl_ln27_22_fu_1914_p3 = {{reg_801}, {32'd0}};

assign shl_ln27_23_fu_1938_p3 = {{reg_805}, {32'd0}};

assign shl_ln27_2_fu_1322_p3 = {{reg_769}, {32'd0}};

assign shl_ln27_3_fu_1346_p3 = {{reg_777}, {32'd0}};

assign shl_ln27_4_fu_1400_p3 = {{reg_785}, {32'd0}};

assign shl_ln27_5_fu_1424_p3 = {{reg_793}, {32'd0}};

assign shl_ln27_6_fu_1468_p3 = {{reg_797}, {32'd0}};

assign shl_ln27_7_fu_1492_p3 = {{reg_801}, {32'd0}};

assign shl_ln27_8_fu_1526_p3 = {{reg_805}, {32'd0}};

assign shl_ln27_9_fu_1550_p3 = {{C_load_9_reg_2273}, {32'd0}};

assign shl_ln27_s_fu_1583_p3 = {{C_load_10_reg_2298}, {32'd0}};

assign shl_ln_fu_1244_p3 = {{reg_753}, {32'd0}};

assign zext_ln27_10_fu_1109_p1 = add_ln27_58_fu_1104_p2;

assign zext_ln27_11_fu_1119_p1 = add_ln27_59_fu_1114_p2;

assign zext_ln27_12_fu_1139_p1 = add_ln27_60_fu_1134_p2;

assign zext_ln27_13_fu_1149_p1 = add_ln27_61_fu_1144_p2;

assign zext_ln27_14_fu_1169_p1 = add_ln27_62_fu_1164_p2;

assign zext_ln27_15_fu_1179_p1 = add_ln27_63_fu_1174_p2;

assign zext_ln27_16_fu_1199_p1 = add_ln27_64_fu_1194_p2;

assign zext_ln27_17_fu_1209_p1 = add_ln27_65_fu_1204_p2;

assign zext_ln27_18_fu_1229_p1 = add_ln27_66_fu_1224_p2;

assign zext_ln27_19_fu_1239_p1 = add_ln27_67_fu_1234_p2;

assign zext_ln27_1_fu_1000_p1 = add_ln27_49_fu_994_p2;

assign zext_ln27_20_fu_1307_p1 = add_ln27_68_fu_1302_p2;

assign zext_ln27_21_fu_1317_p1 = add_ln27_69_fu_1312_p2;

assign zext_ln27_22_fu_1385_p1 = add_ln27_70_fu_1380_p2;

assign zext_ln27_23_fu_1395_p1 = add_ln27_71_fu_1390_p2;

assign zext_ln27_24_fu_1463_p1 = add_ln27_72_fu_1458_p2;

assign zext_ln27_2_fu_1015_p1 = add_ln27_50_fu_1010_p2;

assign zext_ln27_3_fu_1025_p1 = add_ln27_51_fu_1020_p2;

assign zext_ln27_4_fu_1035_p1 = add_ln27_52_fu_1030_p2;

assign zext_ln27_5_fu_1045_p1 = add_ln27_53_fu_1040_p2;

assign zext_ln27_6_fu_1059_p1 = add_ln27_54_fu_1054_p2;

assign zext_ln27_7_fu_1069_p1 = add_ln27_55_fu_1064_p2;

assign zext_ln27_8_fu_1079_p1 = add_ln27_56_fu_1074_p2;

assign zext_ln27_9_fu_1089_p1 = add_ln27_57_fu_1084_p2;

assign zext_ln27_fu_962_p1 = ap_sig_allocacmp_phi_mul_load;

endmodule //kernel_gemm_kernel_gemm_Pipeline_VITIS_LOOP_25_3
