// ==============================================================
// Generated by Vitis HLS v2023.1.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module kernel_heat_3d_kernel_heat_3d_Pipeline_VITIS_LOOP_31_5_VITIS_LOOP_32_6_VITIS_LOOP_33_7 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        A_address0,
        A_ce0,
        A_we0,
        A_d0,
        B_address0,
        B_ce0,
        B_q0,
        B_address1,
        B_ce1,
        B_q1
);

parameter    ap_ST_fsm_pp0_stage0 = 4'd1;
parameter    ap_ST_fsm_pp0_stage1 = 4'd2;
parameter    ap_ST_fsm_pp0_stage2 = 4'd4;
parameter    ap_ST_fsm_pp0_stage3 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [9:0] A_address0;
output   A_ce0;
output   A_we0;
output  [31:0] A_d0;
output  [9:0] B_address0;
output   B_ce0;
input  [31:0] B_q0;
output  [9:0] B_address1;
output   B_ce1;
input  [31:0] B_q1;

reg ap_idle;
reg A_ce0;
reg A_we0;
reg[9:0] B_address0;
reg B_ce0;
reg[9:0] B_address1;
reg B_ce1;

(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state4_pp0_stage3_iter0;
wire    ap_block_state8_pp0_stage3_iter1;
wire    ap_block_pp0_stage3_subdone;
reg   [0:0] icmp_ln31_reg_981;
reg    ap_condition_exit_pp0_iter0_stage3;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire   [0:0] icmp_ln31_fu_233_p2;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state5_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
reg   [7:0] indvar_flatten33_load_reg_985;
reg   [3:0] i_load_reg_990;
wire   [0:0] icmp_ln32_fu_254_p2;
reg   [0:0] icmp_ln32_reg_997;
wire   [3:0] select_ln31_fu_260_p3;
reg   [3:0] select_ln31_reg_1004;
wire   [3:0] indvars_iv_next192347_fu_268_p2;
reg   [3:0] indvars_iv_next192347_reg_1010;
wire   [7:0] add_ln34_1_fu_306_p2;
reg   [7:0] add_ln34_1_reg_1015;
wire   [0:0] and_ln31_fu_340_p2;
reg   [0:0] and_ln31_reg_1020;
wire   [3:0] select_ln32_fu_352_p3;
reg   [3:0] select_ln32_reg_1025;
wire   [7:0] add_ln35_fu_378_p2;
reg   [7:0] add_ln35_reg_1032;
wire   [6:0] trunc_ln35_fu_384_p1;
reg   [6:0] trunc_ln35_reg_1037;
wire   [7:0] add_ln35_2_fu_400_p2;
reg   [7:0] add_ln35_2_reg_1042;
wire   [6:0] trunc_ln35_1_fu_406_p1;
reg   [6:0] trunc_ln35_1_reg_1047;
wire   [9:0] add_ln34_5_fu_546_p2;
reg   [9:0] add_ln34_5_reg_1052;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state6_pp0_stage1_iter1;
wire    ap_block_pp0_stage1_11001;
wire   [7:0] add_ln34_6_fu_552_p2;
reg   [7:0] add_ln34_6_reg_1059;
wire   [6:0] trunc_ln34_1_fu_558_p1;
reg   [6:0] trunc_ln34_1_reg_1064;
wire   [7:0] add_ln34_8_fu_562_p2;
reg   [7:0] add_ln34_8_reg_1069;
wire   [6:0] trunc_ln34_2_fu_568_p1;
reg   [6:0] trunc_ln34_2_reg_1074;
wire   [9:0] zext_ln34_10_fu_620_p1;
reg   [9:0] zext_ln34_10_reg_1079;
wire   [63:0] zext_ln34_11_fu_702_p1;
reg   [63:0] zext_ln34_11_reg_1096;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_state7_pp0_stage2_iter1;
wire    ap_block_pp0_stage2_11001;
reg   [63:0] zext_ln34_11_reg_1096_pp0_iter1_reg;
wire   [9:0] add_ln34_12_fu_717_p2;
reg   [9:0] add_ln34_12_reg_1111;
reg   [31:0] B_load_3_reg_1116;
reg   [31:0] B_load_4_reg_1121;
wire   [9:0] add_ln36_4_fu_731_p2;
reg   [9:0] add_ln36_4_reg_1126;
wire   [9:0] add_ln36_5_fu_745_p2;
reg   [9:0] add_ln36_5_reg_1131;
reg   [31:0] B_load_reg_1136;
wire    ap_block_pp0_stage3_11001;
reg   [31:0] B_load_1_reg_1142;
reg   [31:0] B_load_5_reg_1162;
reg   [31:0] B_load_6_reg_1167;
wire   [49:0] add_ln36_2_fu_865_p2;
reg   [49:0] add_ln36_2_reg_1172;
wire   [32:0] tmp169_fu_878_p2;
reg   [32:0] tmp169_reg_1177;
wire   [50:0] add_ln34_fu_884_p2;
reg   [50:0] add_ln34_reg_1182;
wire   [50:0] add_ln36_3_fu_909_p2;
reg   [50:0] add_ln36_3_reg_1187;
reg    ap_enable_reg_pp0_iter0_reg;
wire   [63:0] zext_ln35_4_fu_629_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln35_5_fu_640_p1;
wire    ap_block_pp0_stage2;
wire   [63:0] zext_ln34_12_fu_712_p1;
wire   [63:0] zext_ln36_1_fu_755_p1;
wire    ap_block_pp0_stage3;
wire   [63:0] zext_ln36_3_fu_759_p1;
wire   [63:0] zext_ln34_13_fu_780_p1;
wire    ap_block_pp0_stage0;
reg   [3:0] k_fu_92;
wire   [3:0] add_ln36_fu_722_p2;
wire    ap_loop_init;
reg   [3:0] ap_sig_allocacmp_k_load;
reg   [3:0] j_fu_96;
wire   [3:0] select_ln32_1_fu_507_p3;
reg   [3:0] ap_sig_allocacmp_j_1;
reg   [7:0] indvar_flatten33_fu_100;
wire   [7:0] select_ln32_4_fu_768_p3;
reg   [7:0] ap_sig_allocacmp_indvar_flatten33_load;
reg   [3:0] i_fu_104;
wire   [3:0] select_ln31_1_fu_274_p3;
reg   [3:0] ap_sig_allocacmp_i_load;
reg   [9:0] indvar_flatten57_fu_108;
wire   [9:0] add_ln31_fu_239_p2;
reg   [9:0] ap_sig_allocacmp_indvar_flatten57_load;
wire   [6:0] tmp_s_fu_282_p3;
wire   [4:0] tmp_1_fu_294_p3;
wire   [7:0] zext_ln34_fu_290_p1;
wire   [7:0] zext_ln34_1_fu_302_p1;
wire   [3:0] indvars_iv_next1919_fu_221_p2;
wire   [3:0] empty_fu_227_p2;
wire   [0:0] icmp_ln33_fu_334_p2;
wire   [0:0] xor_ln31_fu_328_p2;
wire   [0:0] or_ln32_fu_346_p2;
wire   [3:0] indvars_iv_next1919_mid1_fu_360_p2;
wire   [3:0] select_ln31_4_fu_312_p3;
wire   [3:0] select_ln32_2_fu_366_p3;
wire   [7:0] zext_ln35_fu_374_p1;
wire   [3:0] select_ln31_5_fu_320_p3;
wire   [3:0] select_ln32_3_fu_388_p3;
wire   [7:0] zext_ln35_2_fu_396_p1;
wire   [3:0] indvars_iv_next1923_mid1_fu_420_p2;
wire   [3:0] select_ln31_2_fu_425_p3;
wire   [6:0] tmp_2_fu_431_p3;
wire   [4:0] tmp_3_fu_443_p3;
wire   [7:0] zext_ln34_2_fu_439_p1;
wire   [7:0] zext_ln34_3_fu_451_p1;
wire   [3:0] empty_10_fu_461_p2;
wire   [3:0] select_ln31_3_fu_466_p3;
wire   [6:0] tmp_4_fu_472_p3;
wire   [4:0] tmp_5_fu_484_p3;
wire   [7:0] zext_ln34_4_fu_480_p1;
wire   [7:0] zext_ln34_5_fu_492_p1;
wire   [3:0] indvars_iv_next1919_dup_fu_502_p2;
wire   [7:0] zext_ln34_6_fu_513_p1;
wire   [7:0] add_ln34_4_fu_517_p2;
wire   [6:0] trunc_ln34_fu_522_p1;
wire   [8:0] p_shl1_fu_534_p3;
wire   [9:0] p_shl_fu_526_p3;
wire   [9:0] zext_ln34_7_fu_542_p1;
wire   [7:0] add_ln34_2_fu_455_p2;
wire   [7:0] add_ln34_3_fu_496_p2;
wire   [8:0] p_shl7_fu_579_p3;
wire   [9:0] p_shl6_fu_572_p3;
wire   [9:0] zext_ln35_1_fu_586_p1;
wire   [8:0] p_shl9_fu_603_p3;
wire   [9:0] p_shl8_fu_596_p3;
wire   [9:0] zext_ln35_3_fu_610_p1;
wire   [9:0] add_ln35_1_fu_590_p2;
wire   [9:0] add_ln35_4_fu_623_p2;
wire   [9:0] add_ln35_3_fu_614_p2;
wire   [9:0] add_ln35_5_fu_634_p2;
wire   [8:0] p_shl3_fu_657_p3;
wire   [9:0] p_shl2_fu_650_p3;
wire   [9:0] zext_ln34_8_fu_664_p1;
wire   [8:0] p_shl5_fu_681_p3;
wire   [9:0] p_shl4_fu_674_p3;
wire   [9:0] zext_ln34_9_fu_688_p1;
wire   [9:0] add_ln34_10_fu_698_p2;
wire   [9:0] add_ln34_7_fu_668_p2;
wire   [9:0] add_ln34_11_fu_707_p2;
wire   [9:0] add_ln34_9_fu_692_p2;
wire   [9:0] zext_ln36_fu_727_p1;
wire   [3:0] add_ln36_1_fu_736_p2;
wire   [9:0] zext_ln36_2_fu_741_p1;
wire   [7:0] add_ln32_fu_763_p2;
wire   [47:0] shl_ln34_1_fu_791_p3;
wire   [48:0] shl_ln4_fu_784_p3;
wire  signed [49:0] sext_ln34_fu_798_p1;
wire  signed [49:0] sext_ln34_1_fu_802_p1;
wire   [49:0] sub_ln34_fu_806_p2;
wire   [47:0] shl_ln5_fu_816_p3;
wire  signed [49:0] sext_ln35_fu_823_p1;
wire   [49:0] sub_ln35_fu_827_p2;
wire   [47:0] shl_ln6_fu_837_p3;
wire  signed [49:0] sext_ln36_fu_844_p1;
wire   [47:0] shl_ln36_2_fu_854_p3;
wire  signed [49:0] sext_ln36_1_fu_861_p1;
wire   [49:0] sub_ln36_fu_848_p2;
wire  signed [32:0] B_load_4_cast_fu_875_p1;
wire  signed [32:0] B_load_2_cast_fu_871_p1;
wire  signed [50:0] sext_ln35_1_fu_833_p1;
wire  signed [50:0] sext_ln34_2_fu_812_p1;
wire   [48:0] tmp_6_fu_890_p3;
wire  signed [50:0] tmp17_fu_897_p1;
wire  signed [50:0] sext_ln36_2_fu_906_p1;
wire   [50:0] addconv13_fu_901_p2;
wire   [63:0] shl_ln7_fu_922_p3;
wire   [63:0] shl_ln36_1_fu_915_p3;
wire   [63:0] add_ln37_fu_929_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [3:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to1;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 4'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

kernel_heat_3d_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage3),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage3)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln31_fu_233_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            i_fu_104 <= select_ln31_1_fu_274_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_104 <= 4'd1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten33_fu_100 <= 8'd0;
    end else if (((icmp_ln31_reg_981 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        indvar_flatten33_fu_100 <= select_ln32_4_fu_768_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln31_fu_233_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            indvar_flatten57_fu_108 <= add_ln31_fu_239_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten57_fu_108 <= 10'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        j_fu_96 <= 4'd1;
    end else if (((icmp_ln31_reg_981 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        j_fu_96 <= select_ln32_1_fu_507_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        k_fu_92 <= 4'd1;
    end else if (((icmp_ln31_reg_981 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        k_fu_92 <= add_ln36_fu_722_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln31_reg_981 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        B_load_1_reg_1142 <= B_q1;
        B_load_reg_1136 <= B_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln31_reg_981 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        B_load_3_reg_1116 <= B_q1;
        B_load_4_reg_1121 <= B_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        B_load_5_reg_1162 <= B_q0;
        B_load_6_reg_1167 <= B_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln31_reg_981 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        add_ln34_12_reg_1111 <= add_ln34_12_fu_717_p2;
        add_ln36_4_reg_1126 <= add_ln36_4_fu_731_p2;
        add_ln36_5_reg_1131 <= add_ln36_5_fu_745_p2;
        zext_ln34_11_reg_1096[9 : 0] <= zext_ln34_11_fu_702_p1[9 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln31_fu_233_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln34_1_reg_1015[7 : 1] <= add_ln34_1_fu_306_p2[7 : 1];
        add_ln35_2_reg_1042 <= add_ln35_2_fu_400_p2;
        add_ln35_reg_1032 <= add_ln35_fu_378_p2;
        and_ln31_reg_1020 <= and_ln31_fu_340_p2;
        i_load_reg_990 <= ap_sig_allocacmp_i_load;
        icmp_ln32_reg_997 <= icmp_ln32_fu_254_p2;
        indvar_flatten33_load_reg_985 <= ap_sig_allocacmp_indvar_flatten33_load;
        indvars_iv_next192347_reg_1010 <= indvars_iv_next192347_fu_268_p2;
        select_ln31_reg_1004 <= select_ln31_fu_260_p3;
        select_ln32_reg_1025 <= select_ln32_fu_352_p3;
        trunc_ln35_1_reg_1047 <= trunc_ln35_1_fu_406_p1;
        trunc_ln35_reg_1037 <= trunc_ln35_fu_384_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln31_reg_981 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add_ln34_5_reg_1052[9 : 1] <= add_ln34_5_fu_546_p2[9 : 1];
        add_ln34_6_reg_1059 <= add_ln34_6_fu_552_p2;
        add_ln34_8_reg_1069 <= add_ln34_8_fu_562_p2;
        trunc_ln34_1_reg_1064 <= trunc_ln34_1_fu_558_p1;
        trunc_ln34_2_reg_1074 <= trunc_ln34_2_fu_568_p1;
        zext_ln34_10_reg_1079[3 : 0] <= zext_ln34_10_fu_620_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add_ln34_reg_1182[50 : 16] <= add_ln34_fu_884_p2[50 : 16];
        add_ln36_2_reg_1172[49 : 16] <= add_ln36_2_fu_865_p2[49 : 16];
        tmp169_reg_1177 <= tmp169_fu_878_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        add_ln36_3_reg_1187[50 : 16] <= add_ln36_3_fu_909_p2[50 : 16];
        zext_ln34_11_reg_1096_pp0_iter1_reg[9 : 0] <= zext_ln34_11_reg_1096[9 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln31_reg_981 <= icmp_ln31_fu_233_p2;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        A_ce0 = 1'b1;
    end else begin
        A_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        A_we0 = 1'b1;
    end else begin
        A_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        B_address0 = zext_ln34_13_fu_780_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        B_address0 = zext_ln36_1_fu_755_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        B_address0 = zext_ln34_11_fu_702_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        B_address0 = zext_ln35_5_fu_640_p1;
    end else begin
        B_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            B_address1 = zext_ln36_3_fu_759_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            B_address1 = zext_ln34_12_fu_712_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            B_address1 = zext_ln35_4_fu_629_p1;
        end else begin
            B_address1 = 'bx;
        end
    end else begin
        B_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        B_ce0 = 1'b1;
    end else begin
        B_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        B_ce1 = 1'b1;
    end else begin
        B_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln31_reg_981 == 1'd1) & (1'b0 == ap_block_pp0_stage3_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_condition_exit_pp0_iter0_stage3 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage3 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i_load = 4'd1;
    end else begin
        ap_sig_allocacmp_i_load = i_fu_104;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten33_load = 8'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten33_load = indvar_flatten33_fu_100;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten57_load = 10'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten57_load = indvar_flatten57_fu_108;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_j_1 = 4'd1;
    end else begin
        ap_sig_allocacmp_j_1 = j_fu_96;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_k_load = 4'd1;
    end else begin
        ap_sig_allocacmp_k_load = k_fu_92;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to1 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign A_address0 = zext_ln34_11_reg_1096_pp0_iter1_reg;

assign A_d0 = {{add_ln37_fu_929_p2[63:32]}};

assign B_load_2_cast_fu_871_p1 = $signed(B_q0);

assign B_load_4_cast_fu_875_p1 = $signed(B_load_4_reg_1121);

assign add_ln31_fu_239_p2 = (ap_sig_allocacmp_indvar_flatten57_load + 10'd1);

assign add_ln32_fu_763_p2 = (indvar_flatten33_load_reg_985 + 8'd1);

assign add_ln34_10_fu_698_p2 = (add_ln34_5_reg_1052 + zext_ln34_10_reg_1079);

assign add_ln34_11_fu_707_p2 = (add_ln34_7_fu_668_p2 + zext_ln34_10_reg_1079);

assign add_ln34_12_fu_717_p2 = (add_ln34_9_fu_692_p2 + zext_ln34_10_reg_1079);

assign add_ln34_1_fu_306_p2 = (zext_ln34_fu_290_p1 + zext_ln34_1_fu_302_p1);

assign add_ln34_2_fu_455_p2 = (zext_ln34_2_fu_439_p1 + zext_ln34_3_fu_451_p1);

assign add_ln34_3_fu_496_p2 = (zext_ln34_4_fu_480_p1 + zext_ln34_5_fu_492_p1);

assign add_ln34_4_fu_517_p2 = (add_ln34_1_reg_1015 + zext_ln34_6_fu_513_p1);

assign add_ln34_5_fu_546_p2 = (p_shl_fu_526_p3 + zext_ln34_7_fu_542_p1);

assign add_ln34_6_fu_552_p2 = (add_ln34_2_fu_455_p2 + zext_ln34_6_fu_513_p1);

assign add_ln34_7_fu_668_p2 = (p_shl2_fu_650_p3 + zext_ln34_8_fu_664_p1);

assign add_ln34_8_fu_562_p2 = (add_ln34_3_fu_496_p2 + zext_ln34_6_fu_513_p1);

assign add_ln34_9_fu_692_p2 = (p_shl4_fu_674_p3 + zext_ln34_9_fu_688_p1);

assign add_ln34_fu_884_p2 = ($signed(sext_ln35_1_fu_833_p1) + $signed(sext_ln34_2_fu_812_p1));

assign add_ln35_1_fu_590_p2 = (p_shl6_fu_572_p3 + zext_ln35_1_fu_586_p1);

assign add_ln35_2_fu_400_p2 = (add_ln34_1_fu_306_p2 + zext_ln35_2_fu_396_p1);

assign add_ln35_3_fu_614_p2 = (p_shl8_fu_596_p3 + zext_ln35_3_fu_610_p1);

assign add_ln35_4_fu_623_p2 = (add_ln35_1_fu_590_p2 + zext_ln34_10_fu_620_p1);

assign add_ln35_5_fu_634_p2 = (add_ln35_3_fu_614_p2 + zext_ln34_10_fu_620_p1);

assign add_ln35_fu_378_p2 = (add_ln34_1_fu_306_p2 + zext_ln35_fu_374_p1);

assign add_ln36_1_fu_736_p2 = ($signed(select_ln32_reg_1025) + $signed(4'd15));

assign add_ln36_2_fu_865_p2 = ($signed(sext_ln36_1_fu_861_p1) + $signed(sub_ln36_fu_848_p2));

assign add_ln36_3_fu_909_p2 = ($signed(sext_ln36_2_fu_906_p1) + $signed(addconv13_fu_901_p2));

assign add_ln36_4_fu_731_p2 = (add_ln34_5_reg_1052 + zext_ln36_fu_727_p1);

assign add_ln36_5_fu_745_p2 = (add_ln34_5_reg_1052 + zext_ln36_2_fu_741_p1);

assign add_ln36_fu_722_p2 = (select_ln32_reg_1025 + 4'd1);

assign add_ln37_fu_929_p2 = (shl_ln7_fu_922_p3 + shl_ln36_1_fu_915_p3);

assign addconv13_fu_901_p2 = ($signed(tmp17_fu_897_p1) + $signed(add_ln34_reg_1182));

assign and_ln31_fu_340_p2 = (xor_ln31_fu_328_p2 & icmp_ln33_fu_334_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage3;

assign empty_10_fu_461_p2 = ($signed(i_load_reg_990) + $signed(4'd15));

assign empty_fu_227_p2 = ($signed(ap_sig_allocacmp_j_1) + $signed(4'd15));

assign icmp_ln31_fu_233_p2 = ((ap_sig_allocacmp_indvar_flatten57_load == 10'd512) ? 1'b1 : 1'b0);

assign icmp_ln32_fu_254_p2 = ((ap_sig_allocacmp_indvar_flatten33_load == 8'd64) ? 1'b1 : 1'b0);

assign icmp_ln33_fu_334_p2 = ((ap_sig_allocacmp_k_load == 4'd9) ? 1'b1 : 1'b0);

assign indvars_iv_next1919_dup_fu_502_p2 = (select_ln31_reg_1004 + 4'd1);

assign indvars_iv_next1919_fu_221_p2 = (ap_sig_allocacmp_j_1 + 4'd1);

assign indvars_iv_next1919_mid1_fu_360_p2 = (select_ln31_fu_260_p3 + 4'd2);

assign indvars_iv_next192347_fu_268_p2 = (ap_sig_allocacmp_i_load + 4'd1);

assign indvars_iv_next1923_mid1_fu_420_p2 = (i_load_reg_990 + 4'd2);

assign or_ln32_fu_346_p2 = (icmp_ln32_fu_254_p2 | and_ln31_fu_340_p2);

assign p_shl1_fu_534_p3 = {{add_ln34_4_fu_517_p2}, {1'd0}};

assign p_shl2_fu_650_p3 = {{trunc_ln34_1_reg_1064}, {3'd0}};

assign p_shl3_fu_657_p3 = {{add_ln34_6_reg_1059}, {1'd0}};

assign p_shl4_fu_674_p3 = {{trunc_ln34_2_reg_1074}, {3'd0}};

assign p_shl5_fu_681_p3 = {{add_ln34_8_reg_1069}, {1'd0}};

assign p_shl6_fu_572_p3 = {{trunc_ln35_reg_1037}, {3'd0}};

assign p_shl7_fu_579_p3 = {{add_ln35_reg_1032}, {1'd0}};

assign p_shl8_fu_596_p3 = {{trunc_ln35_1_reg_1047}, {3'd0}};

assign p_shl9_fu_603_p3 = {{add_ln35_2_reg_1042}, {1'd0}};

assign p_shl_fu_526_p3 = {{trunc_ln34_fu_522_p1}, {3'd0}};

assign select_ln31_1_fu_274_p3 = ((icmp_ln32_fu_254_p2[0:0] == 1'b1) ? indvars_iv_next192347_fu_268_p2 : ap_sig_allocacmp_i_load);

assign select_ln31_2_fu_425_p3 = ((icmp_ln32_reg_997[0:0] == 1'b1) ? indvars_iv_next1923_mid1_fu_420_p2 : indvars_iv_next192347_reg_1010);

assign select_ln31_3_fu_466_p3 = ((icmp_ln32_reg_997[0:0] == 1'b1) ? i_load_reg_990 : empty_10_fu_461_p2);

assign select_ln31_4_fu_312_p3 = ((icmp_ln32_fu_254_p2[0:0] == 1'b1) ? 4'd2 : indvars_iv_next1919_fu_221_p2);

assign select_ln31_5_fu_320_p3 = ((icmp_ln32_fu_254_p2[0:0] == 1'b1) ? 4'd0 : empty_fu_227_p2);

assign select_ln31_fu_260_p3 = ((icmp_ln32_fu_254_p2[0:0] == 1'b1) ? 4'd1 : ap_sig_allocacmp_j_1);

assign select_ln32_1_fu_507_p3 = ((and_ln31_reg_1020[0:0] == 1'b1) ? indvars_iv_next1919_dup_fu_502_p2 : select_ln31_reg_1004);

assign select_ln32_2_fu_366_p3 = ((and_ln31_fu_340_p2[0:0] == 1'b1) ? indvars_iv_next1919_mid1_fu_360_p2 : select_ln31_4_fu_312_p3);

assign select_ln32_3_fu_388_p3 = ((and_ln31_fu_340_p2[0:0] == 1'b1) ? select_ln31_fu_260_p3 : select_ln31_5_fu_320_p3);

assign select_ln32_4_fu_768_p3 = ((icmp_ln32_reg_997[0:0] == 1'b1) ? 8'd1 : add_ln32_fu_763_p2);

assign select_ln32_fu_352_p3 = ((or_ln32_fu_346_p2[0:0] == 1'b1) ? 4'd1 : ap_sig_allocacmp_k_load);

assign sext_ln34_1_fu_802_p1 = $signed(shl_ln4_fu_784_p3);

assign sext_ln34_2_fu_812_p1 = $signed(sub_ln34_fu_806_p2);

assign sext_ln34_fu_798_p1 = $signed(shl_ln34_1_fu_791_p3);

assign sext_ln35_1_fu_833_p1 = $signed(sub_ln35_fu_827_p2);

assign sext_ln35_fu_823_p1 = $signed(shl_ln5_fu_816_p3);

assign sext_ln36_1_fu_861_p1 = $signed(shl_ln36_2_fu_854_p3);

assign sext_ln36_2_fu_906_p1 = $signed(add_ln36_2_reg_1172);

assign sext_ln36_fu_844_p1 = $signed(shl_ln6_fu_837_p3);

assign shl_ln34_1_fu_791_p3 = {{B_load_1_reg_1142}, {16'd0}};

assign shl_ln36_1_fu_915_p3 = {{add_ln36_3_reg_1187}, {13'd0}};

assign shl_ln36_2_fu_854_p3 = {{B_load_6_reg_1167}, {16'd0}};

assign shl_ln4_fu_784_p3 = {{B_load_reg_1136}, {17'd0}};

assign shl_ln5_fu_816_p3 = {{B_load_3_reg_1116}, {16'd0}};

assign shl_ln6_fu_837_p3 = {{B_load_5_reg_1162}, {16'd0}};

assign shl_ln7_fu_922_p3 = {{B_load_reg_1136}, {32'd0}};

assign sub_ln34_fu_806_p2 = ($signed(sext_ln34_fu_798_p1) - $signed(sext_ln34_1_fu_802_p1));

assign sub_ln35_fu_827_p2 = ($signed(sext_ln35_fu_823_p1) - $signed(sext_ln34_1_fu_802_p1));

assign sub_ln36_fu_848_p2 = ($signed(sext_ln36_fu_844_p1) - $signed(sext_ln34_1_fu_802_p1));

assign tmp169_fu_878_p2 = ($signed(B_load_4_cast_fu_875_p1) + $signed(B_load_2_cast_fu_871_p1));

assign tmp17_fu_897_p1 = $signed(tmp_6_fu_890_p3);

assign tmp_1_fu_294_p3 = {{select_ln31_1_fu_274_p3}, {1'd0}};

assign tmp_2_fu_431_p3 = {{select_ln31_2_fu_425_p3}, {3'd0}};

assign tmp_3_fu_443_p3 = {{select_ln31_2_fu_425_p3}, {1'd0}};

assign tmp_4_fu_472_p3 = {{select_ln31_3_fu_466_p3}, {3'd0}};

assign tmp_5_fu_484_p3 = {{select_ln31_3_fu_466_p3}, {1'd0}};

assign tmp_6_fu_890_p3 = {{tmp169_reg_1177}, {16'd0}};

assign tmp_s_fu_282_p3 = {{select_ln31_1_fu_274_p3}, {3'd0}};

assign trunc_ln34_1_fu_558_p1 = add_ln34_6_fu_552_p2[6:0];

assign trunc_ln34_2_fu_568_p1 = add_ln34_8_fu_562_p2[6:0];

assign trunc_ln34_fu_522_p1 = add_ln34_4_fu_517_p2[6:0];

assign trunc_ln35_1_fu_406_p1 = add_ln35_2_fu_400_p2[6:0];

assign trunc_ln35_fu_384_p1 = add_ln35_fu_378_p2[6:0];

assign xor_ln31_fu_328_p2 = (icmp_ln32_fu_254_p2 ^ 1'd1);

assign zext_ln34_10_fu_620_p1 = select_ln32_reg_1025;

assign zext_ln34_11_fu_702_p1 = add_ln34_10_fu_698_p2;

assign zext_ln34_12_fu_712_p1 = add_ln34_11_fu_707_p2;

assign zext_ln34_13_fu_780_p1 = add_ln34_12_reg_1111;

assign zext_ln34_1_fu_302_p1 = tmp_1_fu_294_p3;

assign zext_ln34_2_fu_439_p1 = tmp_2_fu_431_p3;

assign zext_ln34_3_fu_451_p1 = tmp_3_fu_443_p3;

assign zext_ln34_4_fu_480_p1 = tmp_4_fu_472_p3;

assign zext_ln34_5_fu_492_p1 = tmp_5_fu_484_p3;

assign zext_ln34_6_fu_513_p1 = select_ln32_1_fu_507_p3;

assign zext_ln34_7_fu_542_p1 = p_shl1_fu_534_p3;

assign zext_ln34_8_fu_664_p1 = p_shl3_fu_657_p3;

assign zext_ln34_9_fu_688_p1 = p_shl5_fu_681_p3;

assign zext_ln34_fu_290_p1 = tmp_s_fu_282_p3;

assign zext_ln35_1_fu_586_p1 = p_shl7_fu_579_p3;

assign zext_ln35_2_fu_396_p1 = select_ln32_3_fu_388_p3;

assign zext_ln35_3_fu_610_p1 = p_shl9_fu_603_p3;

assign zext_ln35_4_fu_629_p1 = add_ln35_4_fu_623_p2;

assign zext_ln35_5_fu_640_p1 = add_ln35_5_fu_634_p2;

assign zext_ln35_fu_374_p1 = select_ln32_2_fu_366_p3;

assign zext_ln36_1_fu_755_p1 = add_ln36_4_reg_1126;

assign zext_ln36_2_fu_741_p1 = add_ln36_1_fu_736_p2;

assign zext_ln36_3_fu_759_p1 = add_ln36_5_reg_1131;

assign zext_ln36_fu_727_p1 = add_ln36_fu_722_p2;

always @ (posedge ap_clk) begin
    add_ln34_1_reg_1015[0] <= 1'b0;
    add_ln34_5_reg_1052[0] <= 1'b0;
    zext_ln34_10_reg_1079[9:4] <= 6'b000000;
    zext_ln34_11_reg_1096[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln34_11_reg_1096_pp0_iter1_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    add_ln36_2_reg_1172[15:0] <= 16'b0000000000000000;
    add_ln34_reg_1182[15:0] <= 16'b0000000000000000;
    add_ln36_3_reg_1187[15:0] <= 16'b0000000000000000;
end

endmodule //kernel_heat_3d_kernel_heat_3d_Pipeline_VITIS_LOOP_31_5_VITIS_LOOP_32_6_VITIS_LOOP_33_7
