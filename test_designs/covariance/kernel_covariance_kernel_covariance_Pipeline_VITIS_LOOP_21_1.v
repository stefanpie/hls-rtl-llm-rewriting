// ==============================================================
// Generated by Vitis HLS v2023.1.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module kernel_covariance_kernel_covariance_Pipeline_VITIS_LOOP_21_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        data_address0,
        data_ce0,
        data_q0,
        data_address1,
        data_ce1,
        data_q1,
        mean_address0,
        mean_ce0,
        mean_we0,
        mean_d0,
        conv_i_i64
);

parameter    ap_ST_fsm_pp0_stage0 = 16'd1;
parameter    ap_ST_fsm_pp0_stage1 = 16'd2;
parameter    ap_ST_fsm_pp0_stage2 = 16'd4;
parameter    ap_ST_fsm_pp0_stage3 = 16'd8;
parameter    ap_ST_fsm_pp0_stage4 = 16'd16;
parameter    ap_ST_fsm_pp0_stage5 = 16'd32;
parameter    ap_ST_fsm_pp0_stage6 = 16'd64;
parameter    ap_ST_fsm_pp0_stage7 = 16'd128;
parameter    ap_ST_fsm_pp0_stage8 = 16'd256;
parameter    ap_ST_fsm_pp0_stage9 = 16'd512;
parameter    ap_ST_fsm_pp0_stage10 = 16'd1024;
parameter    ap_ST_fsm_pp0_stage11 = 16'd2048;
parameter    ap_ST_fsm_pp0_stage12 = 16'd4096;
parameter    ap_ST_fsm_pp0_stage13 = 16'd8192;
parameter    ap_ST_fsm_pp0_stage14 = 16'd16384;
parameter    ap_ST_fsm_pp0_stage15 = 16'd32768;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [9:0] data_address0;
output   data_ce0;
input  [31:0] data_q0;
output  [9:0] data_address1;
output   data_ce1;
input  [31:0] data_q1;
output  [4:0] mean_address0;
output   mean_ce0;
output   mean_we0;
output  [31:0] mean_d0;
input  [31:0] conv_i_i64;

reg ap_idle;
reg[9:0] data_address0;
reg data_ce0;
reg[9:0] data_address1;
reg data_ce1;
reg mean_ce0;
reg mean_we0;

(* fsm_encoding = "none" *) reg   [15:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage15;
wire    ap_block_state16_pp0_stage15_iter0;
wire    ap_block_state32_pp0_stage15_iter1;
wire    ap_block_state48_pp0_stage15_iter2;
wire    ap_block_state64_pp0_stage15_iter3;
wire    ap_block_pp0_stage15_subdone;
reg   [0:0] icmp_ln21_reg_938;
reg    ap_condition_exit_pp0_iter0_stage15;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg   [31:0] reg_406;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state18_pp0_stage1_iter1;
wire    ap_block_state34_pp0_stage1_iter2;
wire    ap_block_state50_pp0_stage1_iter3;
wire    ap_block_state66_pp0_stage1_iter4;
wire    ap_block_pp0_stage1_11001;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state4_pp0_stage3_iter0;
wire    ap_block_state20_pp0_stage3_iter1;
wire    ap_block_state36_pp0_stage3_iter2;
wire    ap_block_state52_pp0_stage3_iter3;
wire    ap_block_state68_pp0_stage3_iter4;
wire    ap_block_pp0_stage3_11001;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_state6_pp0_stage5_iter0;
wire    ap_block_state22_pp0_stage5_iter1;
wire    ap_block_state38_pp0_stage5_iter2;
wire    ap_block_state54_pp0_stage5_iter3;
wire    ap_block_state70_pp0_stage5_iter4;
wire    ap_block_pp0_stage5_11001;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_state8_pp0_stage7_iter0;
wire    ap_block_state24_pp0_stage7_iter1;
wire    ap_block_state40_pp0_stage7_iter2;
wire    ap_block_state56_pp0_stage7_iter3;
wire    ap_block_pp0_stage7_11001;
wire    ap_CS_fsm_pp0_stage9;
wire    ap_block_state10_pp0_stage9_iter0;
wire    ap_block_state26_pp0_stage9_iter1;
wire    ap_block_state42_pp0_stage9_iter2;
wire    ap_block_state58_pp0_stage9_iter3;
wire    ap_block_pp0_stage9_11001;
reg   [31:0] reg_410;
wire   [31:0] grp_fu_400_p2;
reg   [31:0] reg_414;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_state19_pp0_stage2_iter1;
wire    ap_block_state35_pp0_stage2_iter2;
wire    ap_block_state51_pp0_stage2_iter3;
wire    ap_block_state67_pp0_stage2_iter4;
wire    ap_block_pp0_stage2_11001;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state5_pp0_stage4_iter0;
wire    ap_block_state21_pp0_stage4_iter1;
wire    ap_block_state37_pp0_stage4_iter2;
wire    ap_block_state53_pp0_stage4_iter3;
wire    ap_block_state69_pp0_stage4_iter4;
wire    ap_block_pp0_stage4_11001;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_state7_pp0_stage6_iter0;
wire    ap_block_state23_pp0_stage6_iter1;
wire    ap_block_state39_pp0_stage6_iter2;
wire    ap_block_state55_pp0_stage6_iter3;
wire    ap_block_state71_pp0_stage6_iter4;
wire    ap_block_pp0_stage6_11001;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_state9_pp0_stage8_iter0;
wire    ap_block_state25_pp0_stage8_iter1;
wire    ap_block_state41_pp0_stage8_iter2;
wire    ap_block_state57_pp0_stage8_iter3;
wire    ap_block_pp0_stage8_11001;
wire    ap_CS_fsm_pp0_stage10;
wire    ap_block_state11_pp0_stage10_iter0;
wire    ap_block_state27_pp0_stage10_iter1;
wire    ap_block_state43_pp0_stage10_iter2;
wire    ap_block_state59_pp0_stage10_iter3;
wire    ap_block_pp0_stage10_11001;
wire    ap_CS_fsm_pp0_stage11;
wire    ap_block_state12_pp0_stage11_iter0;
wire    ap_block_state28_pp0_stage11_iter1;
wire    ap_block_state44_pp0_stage11_iter2;
wire    ap_block_state60_pp0_stage11_iter3;
wire    ap_block_pp0_stage11_11001;
wire    ap_CS_fsm_pp0_stage14;
wire    ap_block_state15_pp0_stage14_iter0;
wire    ap_block_state31_pp0_stage14_iter1;
wire    ap_block_state47_pp0_stage14_iter2;
wire    ap_block_state63_pp0_stage14_iter3;
wire    ap_block_pp0_stage14_11001;
wire    ap_block_pp0_stage15_11001;
reg   [31:0] reg_418;
wire    ap_CS_fsm_pp0_stage12;
wire    ap_block_state13_pp0_stage12_iter0;
wire    ap_block_state29_pp0_stage12_iter1;
wire    ap_block_state45_pp0_stage12_iter2;
wire    ap_block_state61_pp0_stage12_iter3;
wire    ap_block_pp0_stage12_11001;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state17_pp0_stage0_iter1;
wire    ap_block_state33_pp0_stage0_iter2;
wire    ap_block_state49_pp0_stage0_iter3;
wire    ap_block_state65_pp0_stage0_iter4;
wire    ap_block_pp0_stage0_11001;
wire  signed [47:0] conv_i_i64_cast_fu_440_p1;
reg  signed [47:0] conv_i_i64_cast_reg_920;
reg   [4:0] j_2_reg_925;
wire   [0:0] icmp_ln21_fu_452_p2;
reg   [0:0] icmp_ln21_reg_938_pp0_iter1_reg;
reg   [0:0] icmp_ln21_reg_938_pp0_iter2_reg;
reg   [0:0] icmp_ln21_reg_938_pp0_iter3_reg;
wire   [8:0] zext_ln25_1_fu_458_p1;
reg   [8:0] zext_ln25_1_reg_942;
wire   [7:0] zext_ln25_3_fu_520_p1;
reg   [7:0] zext_ln25_3_reg_973;
wire   [6:0] zext_ln25_2_fu_545_p1;
reg   [6:0] zext_ln25_2_reg_990;
wire   [31:0] grp_fu_428_p2;
reg   [31:0] add_ln25_27_reg_1007;
reg   [31:0] add_ln25_5_reg_1032;
wire   [9:0] zext_ln25_fu_651_p1;
reg   [9:0] zext_ln25_reg_1047;
reg   [31:0] add_ln25_12_reg_1068;
reg   [31:0] add_ln25_17_reg_1093;
reg   [31:0] add_ln25_20_reg_1118;
wire   [63:0] j_cast_fu_758_p1;
reg   [63:0] j_cast_reg_1123;
reg   [63:0] j_cast_reg_1123_pp0_iter1_reg;
reg   [63:0] j_cast_reg_1123_pp0_iter2_reg;
reg   [63:0] j_cast_reg_1123_pp0_iter3_reg;
wire    ap_CS_fsm_pp0_stage13;
wire    ap_block_state14_pp0_stage13_iter0;
wire    ap_block_state30_pp0_stage13_iter1;
wire    ap_block_state46_pp0_stage13_iter2;
wire    ap_block_state62_pp0_stage13_iter3;
wire    ap_block_pp0_stage13_11001;
wire   [31:0] add_ln25_fu_796_p2;
reg   [31:0] add_ln25_reg_1148;
wire   [31:0] add_ln25_28_fu_802_p2;
reg   [31:0] add_ln25_28_reg_1153;
wire   [31:0] add_ln25_29_fu_842_p2;
reg   [31:0] add_ln25_29_reg_1168;
wire   [31:0] add_ln25_6_fu_877_p2;
reg   [31:0] add_ln25_6_reg_1183;
wire   [31:0] add_ln25_13_fu_882_p2;
reg   [31:0] add_ln25_13_reg_1188;
wire   [31:0] add_ln25_30_fu_891_p2;
reg   [31:0] add_ln25_30_reg_1193;
reg    ap_enable_reg_pp0_iter0_reg;
wire    ap_block_pp0_stage6_subdone;
wire   [63:0] zext_ln25_32_fu_472_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln25_33_fu_487_p1;
wire   [63:0] zext_ln25_34_fu_501_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln25_35_fu_515_p1;
wire   [63:0] zext_ln25_8_fu_529_p1;
wire    ap_block_pp0_stage2;
wire   [63:0] zext_ln25_9_fu_540_p1;
wire   [63:0] zext_ln25_10_fu_553_p1;
wire    ap_block_pp0_stage3;
wire   [63:0] zext_ln25_11_fu_568_p1;
wire   [63:0] zext_ln25_16_fu_578_p1;
wire    ap_block_pp0_stage4;
wire   [63:0] zext_ln25_17_fu_588_p1;
wire   [63:0] zext_ln25_18_fu_602_p1;
wire    ap_block_pp0_stage5;
wire   [63:0] zext_ln25_19_fu_616_p1;
wire   [63:0] zext_ln25_20_fu_632_p1;
wire    ap_block_pp0_stage6;
wire   [63:0] zext_ln25_21_fu_646_p1;
wire   [63:0] zext_ln25_22_fu_660_p1;
wire    ap_block_pp0_stage7;
wire   [63:0] zext_ln25_23_fu_671_p1;
wire   [63:0] zext_ln25_24_fu_681_p1;
wire    ap_block_pp0_stage8;
wire   [63:0] zext_ln25_25_fu_691_p1;
wire   [63:0] zext_ln25_26_fu_701_p1;
wire    ap_block_pp0_stage9;
wire   [63:0] zext_ln25_27_fu_711_p1;
wire   [63:0] zext_ln25_28_fu_723_p1;
wire    ap_block_pp0_stage10;
wire   [63:0] zext_ln25_29_fu_733_p1;
wire   [63:0] zext_ln25_30_fu_743_p1;
wire    ap_block_pp0_stage11;
wire   [63:0] zext_ln25_31_fu_753_p1;
wire    ap_block_pp0_stage12;
wire   [63:0] zext_ln25_5_fu_771_p1;
wire   [63:0] zext_ln25_6_fu_781_p1;
wire    ap_block_pp0_stage13;
wire   [63:0] zext_ln25_7_fu_791_p1;
wire   [63:0] zext_ln25_12_fu_823_p1;
wire    ap_block_pp0_stage14;
wire   [63:0] zext_ln25_13_fu_833_p1;
wire   [63:0] zext_ln25_14_fu_857_p1;
wire    ap_block_pp0_stage15;
wire   [63:0] zext_ln25_15_fu_867_p1;
reg   [4:0] j_fu_112;
wire   [4:0] add_ln21_fu_807_p2;
wire    ap_loop_init;
reg   [4:0] ap_sig_allocacmp_j_2;
wire   [31:0] grp_fu_422_p2;
wire   [8:0] add_ln25_55_fu_462_p2;
wire  signed [9:0] sext_ln25_6_fu_468_p1;
wire   [8:0] add_ln25_56_fu_477_p2;
wire  signed [9:0] sext_ln25_7_fu_483_p1;
wire   [8:0] add_ln25_57_fu_492_p2;
wire  signed [9:0] sext_ln25_8_fu_497_p1;
wire   [8:0] add_ln25_58_fu_506_p2;
wire  signed [9:0] sext_ln25_9_fu_511_p1;
wire   [7:0] add_ln25_34_fu_523_p2;
wire   [7:0] add_ln25_35_fu_534_p2;
wire   [7:0] add_ln25_36_fu_548_p2;
wire   [6:0] add_ln25_37_fu_558_p2;
wire  signed [7:0] sext_ln25_fu_564_p1;
wire   [8:0] add_ln25_41_fu_573_p2;
wire   [8:0] add_ln25_42_fu_583_p2;
wire   [7:0] add_ln25_43_fu_593_p2;
wire  signed [8:0] sext_ln25_2_fu_598_p1;
wire   [7:0] add_ln25_44_fu_607_p2;
wire  signed [8:0] sext_ln25_3_fu_612_p1;
wire   [6:0] tmp_1_fu_621_p3;
wire  signed [8:0] sext_ln25_4_fu_628_p1;
wire   [6:0] add_ln25_45_fu_637_p2;
wire  signed [8:0] sext_ln25_5_fu_642_p1;
wire   [9:0] add_ln25_46_fu_654_p2;
wire   [9:0] add_ln25_47_fu_665_p2;
wire   [9:0] add_ln25_48_fu_676_p2;
wire   [9:0] add_ln25_49_fu_686_p2;
wire   [9:0] add_ln25_50_fu_696_p2;
wire   [9:0] add_ln25_51_fu_706_p2;
wire   [9:0] tmp_2_cast_fu_716_p3;
wire   [9:0] add_ln25_52_fu_728_p2;
wire   [9:0] add_ln25_53_fu_738_p2;
wire   [9:0] add_ln25_54_fu_748_p2;
wire   [5:0] zext_ln25_4_fu_762_p1;
wire   [5:0] add_ln25_31_fu_765_p2;
wire   [6:0] add_ln25_32_fu_776_p2;
wire   [6:0] add_ln25_33_fu_786_p2;
wire   [31:0] grp_fu_434_p2;
wire   [5:0] tmp_fu_812_p3;
wire  signed [7:0] sext_ln25_1_fu_819_p1;
wire   [8:0] add_ln25_38_fu_828_p2;
wire   [31:0] add_ln25_21_fu_838_p2;
wire   [8:0] add_ln25_39_fu_852_p2;
wire   [8:0] add_ln25_40_fu_862_p2;
wire   [31:0] add_ln25_2_fu_872_p2;
wire   [31:0] add_ln25_14_fu_887_p2;
wire   [47:0] grp_fu_903_p0;
wire  signed [31:0] grp_fu_903_p1;
wire   [31:0] grp_fu_903_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_condition_exit_pp0_iter3_stage6;
reg    ap_idle_pp0_0to2;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg   [15:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to4;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_pp0_stage5_subdone;
wire    ap_block_pp0_stage7_subdone;
wire    ap_block_pp0_stage8_subdone;
wire    ap_block_pp0_stage9_subdone;
wire    ap_block_pp0_stage10_subdone;
wire    ap_block_pp0_stage11_subdone;
wire    ap_block_pp0_stage12_subdone;
wire    ap_block_pp0_stage13_subdone;
wire    ap_block_pp0_stage14_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 16'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

kernel_covariance_sdiv_48ns_32s_32_52_1 #(
    .ID( 1 ),
    .NUM_STAGE( 52 ),
    .din0_WIDTH( 48 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
sdiv_48ns_32s_32_52_1_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_903_p0),
    .din1(grp_fu_903_p1),
    .ce(1'b1),
    .dout(grp_fu_903_p2)
);

kernel_covariance_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage15),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage6_subdone) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_loop_exit_ready_pp0_iter3_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage15)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage15_subdone) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage15_subdone) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage15_subdone) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage6_subdone) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            ap_enable_reg_pp0_iter4 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage15_subdone) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter3_stage6) & (ap_idle_pp0_0to2 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage15_11001) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter3_stage6) & (ap_idle_pp0_0to2 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage15_11001) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter3_stage6) & (ap_idle_pp0_0to2 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage15_11001) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        j_fu_112 <= 5'd0;
    end else if (((icmp_ln21_reg_938 == 1'd0) & (1'b0 == ap_block_pp0_stage14_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
        j_fu_112 <= add_ln21_fu_807_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln21_reg_938 == 1'd0) & (1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        add_ln25_12_reg_1068 <= grp_fu_428_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add_ln25_13_reg_1188 <= add_ln25_13_fu_882_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln21_reg_938 == 1'd0) & (1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        add_ln25_17_reg_1093 <= grp_fu_428_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln21_reg_938 == 1'd0) & (1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        add_ln25_20_reg_1118 <= grp_fu_428_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln21_reg_938 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        add_ln25_27_reg_1007 <= grp_fu_428_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln21_reg_938 == 1'd0) & (1'b0 == ap_block_pp0_stage13_11001) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
        add_ln25_28_reg_1153 <= add_ln25_28_fu_802_p2;
        add_ln25_reg_1148 <= add_ln25_fu_796_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln21_reg_938 == 1'd0) & (1'b0 == ap_block_pp0_stage14_11001) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
        add_ln25_29_reg_1168 <= add_ln25_29_fu_842_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        add_ln25_30_reg_1193 <= add_ln25_30_fu_891_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln21_reg_938 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        add_ln25_5_reg_1032 <= grp_fu_428_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln21_reg_938 == 1'd0) & (1'b0 == ap_block_pp0_stage15_11001) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        add_ln25_6_reg_1183 <= add_ln25_6_fu_877_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_i_i64_cast_reg_920 <= conv_i_i64_cast_fu_440_p1;
        icmp_ln21_reg_938 <= icmp_ln21_fu_452_p2;
        icmp_ln21_reg_938_pp0_iter1_reg <= icmp_ln21_reg_938;
        icmp_ln21_reg_938_pp0_iter2_reg <= icmp_ln21_reg_938_pp0_iter1_reg;
        icmp_ln21_reg_938_pp0_iter3_reg <= icmp_ln21_reg_938_pp0_iter2_reg;
        j_2_reg_925 <= ap_sig_allocacmp_j_2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln21_reg_938 == 1'd0) & (1'b0 == ap_block_pp0_stage12_11001) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
        j_cast_reg_1123[4 : 0] <= j_cast_fu_758_p1[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage12_11001) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
        j_cast_reg_1123_pp0_iter1_reg[4 : 0] <= j_cast_reg_1123[4 : 0];
        j_cast_reg_1123_pp0_iter2_reg[4 : 0] <= j_cast_reg_1123_pp0_iter1_reg[4 : 0];
        j_cast_reg_1123_pp0_iter3_reg[4 : 0] <= j_cast_reg_1123_pp0_iter2_reg[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln21_reg_938 == 1'd0) & (1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((icmp_ln21_reg_938 == 1'd0) & (1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((icmp_ln21_reg_938 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((icmp_ln21_reg_938 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((icmp_ln21_reg_938 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        reg_406 <= data_q1;
        reg_410 <= data_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln21_reg_938 == 1'd0) & (1'b0 == ap_block_pp0_stage15_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((icmp_ln21_reg_938 == 1'd0) & (1'b0 == ap_block_pp0_stage14_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((icmp_ln21_reg_938 == 1'd0) & (1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((icmp_ln21_reg_938 == 1'd0) & (1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((icmp_ln21_reg_938 == 1'd0) & (1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((icmp_ln21_reg_938 == 1'd0) & (1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((icmp_ln21_reg_938 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((icmp_ln21_reg_938 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) 
    & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        reg_414 <= grp_fu_400_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((icmp_ln21_reg_938 == 1'd0) & (1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)))) begin
        reg_418 <= grp_fu_400_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln21_fu_452_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        zext_ln25_1_reg_942[4 : 0] <= zext_ln25_1_fu_458_p1[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln21_reg_938 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        zext_ln25_2_reg_990[4 : 0] <= zext_ln25_2_fu_545_p1[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln21_reg_938 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        zext_ln25_3_reg_973[4 : 0] <= zext_ln25_3_fu_520_p1[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln21_reg_938 == 1'd0) & (1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        zext_ln25_reg_1047[4 : 0] <= zext_ln25_fu_651_p1[4 : 0];
    end
end

always @ (*) begin
    if (((icmp_ln21_reg_938 == 1'd1) & (1'b0 == ap_block_pp0_stage15_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        ap_condition_exit_pp0_iter0_stage15 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage15 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage6_subdone) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln21_reg_938_pp0_iter3_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        ap_condition_exit_pp0_iter3_stage6 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter3_stage6 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage6_subdone) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_loop_exit_ready_pp0_iter3_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to2 = 1'b1;
    end else begin
        ap_idle_pp0_0to2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to4 = 1'b1;
    end else begin
        ap_idle_pp0_1to4 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage15_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_j_2 = 5'd0;
    end else begin
        ap_sig_allocacmp_j_2 = j_fu_112;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage15) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
            data_address0 = zext_ln25_15_fu_867_p1;
        end else if (((1'b0 == ap_block_pp0_stage14) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
            data_address0 = zext_ln25_13_fu_833_p1;
        end else if (((1'b0 == ap_block_pp0_stage13) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
            data_address0 = zext_ln25_7_fu_791_p1;
        end else if (((1'b0 == ap_block_pp0_stage12) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
            data_address0 = zext_ln25_5_fu_771_p1;
        end else if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            data_address0 = zext_ln25_31_fu_753_p1;
        end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            data_address0 = zext_ln25_29_fu_733_p1;
        end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            data_address0 = zext_ln25_27_fu_711_p1;
        end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            data_address0 = zext_ln25_25_fu_691_p1;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            data_address0 = zext_ln25_23_fu_671_p1;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            data_address0 = zext_ln25_21_fu_646_p1;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            data_address0 = zext_ln25_19_fu_616_p1;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            data_address0 = zext_ln25_17_fu_588_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            data_address0 = zext_ln25_11_fu_568_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            data_address0 = zext_ln25_9_fu_540_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            data_address0 = zext_ln25_35_fu_515_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            data_address0 = zext_ln25_33_fu_487_p1;
        end else begin
            data_address0 = 'bx;
        end
    end else begin
        data_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage15) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
            data_address1 = zext_ln25_14_fu_857_p1;
        end else if (((1'b0 == ap_block_pp0_stage14) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
            data_address1 = zext_ln25_12_fu_823_p1;
        end else if (((1'b0 == ap_block_pp0_stage13) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
            data_address1 = zext_ln25_6_fu_781_p1;
        end else if (((1'b0 == ap_block_pp0_stage12) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
            data_address1 = j_cast_fu_758_p1;
        end else if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            data_address1 = zext_ln25_30_fu_743_p1;
        end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            data_address1 = zext_ln25_28_fu_723_p1;
        end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            data_address1 = zext_ln25_26_fu_701_p1;
        end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            data_address1 = zext_ln25_24_fu_681_p1;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            data_address1 = zext_ln25_22_fu_660_p1;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            data_address1 = zext_ln25_20_fu_632_p1;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            data_address1 = zext_ln25_18_fu_602_p1;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            data_address1 = zext_ln25_16_fu_578_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            data_address1 = zext_ln25_10_fu_553_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            data_address1 = zext_ln25_8_fu_529_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            data_address1 = zext_ln25_34_fu_501_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            data_address1 = zext_ln25_32_fu_472_p1;
        end else begin
            data_address1 = 'bx;
        end
    end else begin
        data_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage13_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b0 == ap_block_pp0_stage15_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((1'b0 == ap_block_pp0_stage14_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage4_11001) 
    & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        data_ce0 = 1'b1;
    end else begin
        data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage13_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b0 == ap_block_pp0_stage15_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((1'b0 == ap_block_pp0_stage14_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage4_11001) 
    & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        data_ce1 = 1'b1;
    end else begin
        data_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        mean_ce0 = 1'b1;
    end else begin
        mean_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        mean_we0 = 1'b1;
    end else begin
        mean_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to4 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if (((1'b1 == ap_condition_exit_pp0_iter3_stage6) & (ap_idle_pp0_0to2 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        ap_ST_fsm_pp0_stage10 : begin
            if ((1'b0 == ap_block_pp0_stage10_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end
        end
        ap_ST_fsm_pp0_stage11 : begin
            if ((1'b0 == ap_block_pp0_stage11_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end
        end
        ap_ST_fsm_pp0_stage12 : begin
            if ((1'b0 == ap_block_pp0_stage12_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end
        end
        ap_ST_fsm_pp0_stage13 : begin
            if ((1'b0 == ap_block_pp0_stage13_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end
        end
        ap_ST_fsm_pp0_stage14 : begin
            if ((1'b0 == ap_block_pp0_stage14_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end
        end
        ap_ST_fsm_pp0_stage15 : begin
            if ((1'b0 == ap_block_pp0_stage15_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln21_fu_807_p2 = (j_2_reg_925 + 5'd1);

assign add_ln25_13_fu_882_p2 = (add_ln25_12_reg_1068 + grp_fu_434_p2);

assign add_ln25_14_fu_887_p2 = (add_ln25_13_reg_1188 + add_ln25_6_reg_1183);

assign add_ln25_21_fu_838_p2 = (add_ln25_20_reg_1118 + add_ln25_17_reg_1093);

assign add_ln25_28_fu_802_p2 = (add_ln25_27_reg_1007 + grp_fu_434_p2);

assign add_ln25_29_fu_842_p2 = (add_ln25_28_reg_1153 + add_ln25_21_fu_838_p2);

assign add_ln25_2_fu_872_p2 = (reg_414 + add_ln25_reg_1148);

assign add_ln25_30_fu_891_p2 = (add_ln25_29_reg_1168 + add_ln25_14_fu_887_p2);

assign add_ln25_31_fu_765_p2 = (zext_ln25_4_fu_762_p1 + 6'd28);

assign add_ln25_32_fu_776_p2 = (zext_ln25_2_reg_990 + 7'd56);

assign add_ln25_33_fu_786_p2 = ($signed(zext_ln25_2_reg_990) + $signed(7'd84));

assign add_ln25_34_fu_523_p2 = (zext_ln25_3_fu_520_p1 + 8'd112);

assign add_ln25_35_fu_534_p2 = ($signed(zext_ln25_3_fu_520_p1) + $signed(8'd140));

assign add_ln25_36_fu_548_p2 = ($signed(zext_ln25_3_reg_973) + $signed(8'd168));

assign add_ln25_37_fu_558_p2 = ($signed(zext_ln25_2_fu_545_p1) + $signed(7'd68));

assign add_ln25_38_fu_828_p2 = (zext_ln25_1_reg_942 + 9'd252);

assign add_ln25_39_fu_852_p2 = ($signed(zext_ln25_1_reg_942) + $signed(9'd280));

assign add_ln25_40_fu_862_p2 = ($signed(zext_ln25_1_reg_942) + $signed(9'd308));

assign add_ln25_41_fu_573_p2 = ($signed(zext_ln25_1_reg_942) + $signed(9'd336));

assign add_ln25_42_fu_583_p2 = ($signed(zext_ln25_1_reg_942) + $signed(9'd364));

assign add_ln25_43_fu_593_p2 = ($signed(zext_ln25_3_reg_973) + $signed(8'd136));

assign add_ln25_44_fu_607_p2 = ($signed(zext_ln25_3_reg_973) + $signed(8'd164));

assign add_ln25_45_fu_637_p2 = ($signed(zext_ln25_2_reg_990) + $signed(7'd92));

assign add_ln25_46_fu_654_p2 = (zext_ln25_fu_651_p1 + 10'd504);

assign add_ln25_47_fu_665_p2 = ($signed(zext_ln25_fu_651_p1) + $signed(10'd532));

assign add_ln25_48_fu_676_p2 = ($signed(zext_ln25_reg_1047) + $signed(10'd560));

assign add_ln25_49_fu_686_p2 = ($signed(zext_ln25_reg_1047) + $signed(10'd588));

assign add_ln25_50_fu_696_p2 = ($signed(zext_ln25_reg_1047) + $signed(10'd616));

assign add_ln25_51_fu_706_p2 = ($signed(zext_ln25_reg_1047) + $signed(10'd644));

assign add_ln25_52_fu_728_p2 = ($signed(zext_ln25_reg_1047) + $signed(10'd700));

assign add_ln25_53_fu_738_p2 = ($signed(zext_ln25_reg_1047) + $signed(10'd728));

assign add_ln25_54_fu_748_p2 = ($signed(zext_ln25_reg_1047) + $signed(10'd756));

assign add_ln25_55_fu_462_p2 = ($signed(zext_ln25_1_fu_458_p1) + $signed(9'd272));

assign add_ln25_56_fu_477_p2 = ($signed(zext_ln25_1_fu_458_p1) + $signed(9'd300));

assign add_ln25_57_fu_492_p2 = ($signed(zext_ln25_1_reg_942) + $signed(9'd328));

assign add_ln25_58_fu_506_p2 = ($signed(zext_ln25_1_reg_942) + $signed(9'd356));

assign add_ln25_6_fu_877_p2 = (add_ln25_5_reg_1032 + add_ln25_2_fu_872_p2);

assign add_ln25_fu_796_p2 = (data_q0 + data_q1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage10 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp0_stage11 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp0_stage12 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp0_stage13 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_pp0_stage14 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_pp0_stage15 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[32'd9];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage9_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage10_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage11_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage12_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage13_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage14_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage15_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage5_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage6_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage7_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage8_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage9_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage10_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage11_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage12_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage13_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage14_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage15_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage3_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage4_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage5_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage6_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage7_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage8_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage9_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp0_stage10_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp0_stage11_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp0_stage12_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp0_stage13_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp0_stage14_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp0_stage15_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp0_stage2_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp0_stage3_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp0_stage4_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state54_pp0_stage5_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state55_pp0_stage6_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state56_pp0_stage7_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state57_pp0_stage8_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state58_pp0_stage9_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state59_pp0_stage10_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state60_pp0_stage11_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state61_pp0_stage12_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state62_pp0_stage13_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state63_pp0_stage14_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state64_pp0_stage15_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state65_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state66_pp0_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state67_pp0_stage2_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state68_pp0_stage3_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state69_pp0_stage4_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state70_pp0_stage5_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state71_pp0_stage6_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage8_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage15;

assign conv_i_i64_cast_fu_440_p1 = $signed(conv_i_i64);

assign grp_fu_400_p2 = (data_q1 + data_q0);

assign grp_fu_422_p2 = (reg_406 + reg_410);

assign grp_fu_428_p2 = (reg_414 + grp_fu_422_p2);

assign grp_fu_434_p2 = (reg_418 + reg_414);

assign grp_fu_903_p0 = {{add_ln25_30_reg_1193}, {16'd0}};

assign grp_fu_903_p1 = conv_i_i64_cast_reg_920;

assign icmp_ln21_fu_452_p2 = ((ap_sig_allocacmp_j_2 == 5'd28) ? 1'b1 : 1'b0);

assign j_cast_fu_758_p1 = j_2_reg_925;

assign mean_address0 = j_cast_reg_1123_pp0_iter3_reg;

assign mean_d0 = grp_fu_903_p2[31:0];

assign sext_ln25_1_fu_819_p1 = $signed(tmp_fu_812_p3);

assign sext_ln25_2_fu_598_p1 = $signed(add_ln25_43_fu_593_p2);

assign sext_ln25_3_fu_612_p1 = $signed(add_ln25_44_fu_607_p2);

assign sext_ln25_4_fu_628_p1 = $signed(tmp_1_fu_621_p3);

assign sext_ln25_5_fu_642_p1 = $signed(add_ln25_45_fu_637_p2);

assign sext_ln25_6_fu_468_p1 = $signed(add_ln25_55_fu_462_p2);

assign sext_ln25_7_fu_483_p1 = $signed(add_ln25_56_fu_477_p2);

assign sext_ln25_8_fu_497_p1 = $signed(add_ln25_57_fu_492_p2);

assign sext_ln25_9_fu_511_p1 = $signed(add_ln25_58_fu_506_p2);

assign sext_ln25_fu_564_p1 = $signed(add_ln25_37_fu_558_p2);

assign tmp_1_fu_621_p3 = {{2'd2}, {j_2_reg_925}};

assign tmp_2_cast_fu_716_p3 = {{5'd21}, {j_2_reg_925}};

assign tmp_fu_812_p3 = {{1'd1}, {j_2_reg_925}};

assign zext_ln25_10_fu_553_p1 = add_ln25_36_fu_548_p2;

assign zext_ln25_11_fu_568_p1 = $unsigned(sext_ln25_fu_564_p1);

assign zext_ln25_12_fu_823_p1 = $unsigned(sext_ln25_1_fu_819_p1);

assign zext_ln25_13_fu_833_p1 = add_ln25_38_fu_828_p2;

assign zext_ln25_14_fu_857_p1 = add_ln25_39_fu_852_p2;

assign zext_ln25_15_fu_867_p1 = add_ln25_40_fu_862_p2;

assign zext_ln25_16_fu_578_p1 = add_ln25_41_fu_573_p2;

assign zext_ln25_17_fu_588_p1 = add_ln25_42_fu_583_p2;

assign zext_ln25_18_fu_602_p1 = $unsigned(sext_ln25_2_fu_598_p1);

assign zext_ln25_19_fu_616_p1 = $unsigned(sext_ln25_3_fu_612_p1);

assign zext_ln25_1_fu_458_p1 = ap_sig_allocacmp_j_2;

assign zext_ln25_20_fu_632_p1 = $unsigned(sext_ln25_4_fu_628_p1);

assign zext_ln25_21_fu_646_p1 = $unsigned(sext_ln25_5_fu_642_p1);

assign zext_ln25_22_fu_660_p1 = add_ln25_46_fu_654_p2;

assign zext_ln25_23_fu_671_p1 = add_ln25_47_fu_665_p2;

assign zext_ln25_24_fu_681_p1 = add_ln25_48_fu_676_p2;

assign zext_ln25_25_fu_691_p1 = add_ln25_49_fu_686_p2;

assign zext_ln25_26_fu_701_p1 = add_ln25_50_fu_696_p2;

assign zext_ln25_27_fu_711_p1 = add_ln25_51_fu_706_p2;

assign zext_ln25_28_fu_723_p1 = tmp_2_cast_fu_716_p3;

assign zext_ln25_29_fu_733_p1 = add_ln25_52_fu_728_p2;

assign zext_ln25_2_fu_545_p1 = j_2_reg_925;

assign zext_ln25_30_fu_743_p1 = add_ln25_53_fu_738_p2;

assign zext_ln25_31_fu_753_p1 = add_ln25_54_fu_748_p2;

assign zext_ln25_32_fu_472_p1 = $unsigned(sext_ln25_6_fu_468_p1);

assign zext_ln25_33_fu_487_p1 = $unsigned(sext_ln25_7_fu_483_p1);

assign zext_ln25_34_fu_501_p1 = $unsigned(sext_ln25_8_fu_497_p1);

assign zext_ln25_35_fu_515_p1 = $unsigned(sext_ln25_9_fu_511_p1);

assign zext_ln25_3_fu_520_p1 = j_2_reg_925;

assign zext_ln25_4_fu_762_p1 = j_2_reg_925;

assign zext_ln25_5_fu_771_p1 = add_ln25_31_fu_765_p2;

assign zext_ln25_6_fu_781_p1 = add_ln25_32_fu_776_p2;

assign zext_ln25_7_fu_791_p1 = add_ln25_33_fu_786_p2;

assign zext_ln25_8_fu_529_p1 = add_ln25_34_fu_523_p2;

assign zext_ln25_9_fu_540_p1 = add_ln25_35_fu_534_p2;

assign zext_ln25_fu_651_p1 = j_2_reg_925;

always @ (posedge ap_clk) begin
    zext_ln25_1_reg_942[8:5] <= 4'b0000;
    zext_ln25_3_reg_973[7:5] <= 3'b000;
    zext_ln25_2_reg_990[6:5] <= 2'b00;
    zext_ln25_reg_1047[9:5] <= 5'b00000;
    j_cast_reg_1123[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    j_cast_reg_1123_pp0_iter1_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    j_cast_reg_1123_pp0_iter2_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    j_cast_reg_1123_pp0_iter3_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
end

endmodule //kernel_covariance_kernel_covariance_Pipeline_VITIS_LOOP_21_1
